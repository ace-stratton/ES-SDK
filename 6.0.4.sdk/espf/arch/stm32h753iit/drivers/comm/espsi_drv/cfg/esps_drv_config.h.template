#ifndef ESPS_DRV_CONFIG_H
#define ESPS_DRV_CONFIG_H

/**
 * @addtogroup espsi_drv
 * @{
 *
 * @file     esps_drv_config.h
 * @brief    Main Configuration interface with the application
 *
 * @}
 */
 
#ifdef __cplusplus
extern "C" {
#endif

#include "esps_drv_def.h"
#include "esps_drv_stm32.h"
#include "esps_drv_esps_stack.h"

#include "esps_drv_ct.h"

/**
 * @brief Return MAC Interface enum type
 * @param netIf (ESSASNetInterface) line in the file where the exception occurred.
 * @return Interface instance
 */
eMACInterface_t MacCfg_eGetMacDrvIf(ESSASNetInterface netIf);

/**
 * @brief Returns the ESSA Stack ID of the interface for a given MAC Interface
 * @param macIf MAC interface
 * @return ESSASNetInterface
 */
uint8_t MacCfg_u8GetStackIfId(eMACInterface_t macIf);

/**
 * @brief Return MAC Interface struct information
 * @param macId Mac Interface ID
 * @return Interface instance
 */
sMACInterfaceState_t *MacCfg_sGetMacInterfaceById(const eMACInterface_t macId);

/**
 * @brief Callback after a received frame ready to dispatch
 * @param eMacIf Mac Interface instance
 */
void MacCfg_vDispatcherNotifCallback(const eMACInterface_t eMacIf);

/**
 * @brief Called upon processed received message
 * @param fp_eMACId
 * @param fp_psMsg
 */
void MacCfg_vHandleFrameNotifications(eMACInterface_t fp_eMACId, ESSATMAC_Message * fp_psMsg);

/**
 * @brief Get and Set Termination Enable bit for the UART interface
 * @param eMacIf
 * @return Termination enable state
 */
bool MacCfg_bGetBusTerminationState(const eMACInterface_t eMacIf);

/**
 * @brief Get and Set Termination Enable bit for the UART interface
 * @param eMacIf
 * @param bNewState
 */
void MacCfg_vSetBusTerminationState(const eMACInterface_t eMacIf, const bool bNewState);

/**
 * @brief Return the default Address for the interface
 * @param eMacIf
 * @return Termination enable state
 */
uint8_t MacCfg_u8GetMacAddress(const eMACInterface_t eMacIf);

/**
 * @brief Set the address of the MAC Interface
 * @param eMacIf
 * @param u8MacAddr
 */
void MacCfg_vApplyMacAddrConfig(const eMACInterface_t eMacIf, const uint8_t u8MacAddr);

#ifdef __cplusplus
}
#endif

#endif                          /* ESPS_DRV_CONFIG_H */
