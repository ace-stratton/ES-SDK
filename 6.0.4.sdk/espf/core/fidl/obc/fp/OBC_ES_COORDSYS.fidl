package endurosat.macif

<** @description: EnduroSat Coordinate frames as part of the Onboard Computer
    @details: id = 68
**>
interface OBC_ES_COORDSYS
{
    version { major 3 minor 0 }

    enumeration RESULT
    {
        OK,
        FAIL
    }
    
    <** @description: This corresponds to enum es_coordsys_satellite_axes_t **>
    enumeration SATELLITE_AXIS
    {
    	X_POSITIVE,
    	Y_POSITIVE,
    	Z_POSITIVE,
    	X_NEGATIVE,
    	Y_NEGATIVE,
    	Z_NEGATIVE
    }
    
    struct GYROSCOPE_FRAME 
    {
    	SATELLITE_AXIS gyroscope1
    	SATELLITE_AXIS gyroscope2
    	SATELLITE_AXIS gyroscope3
    }
    
    struct MAGNETOMETER_FRAME 
    {
    	SATELLITE_AXIS magnetometer_x
    	SATELLITE_AXIS magnetometer_y
    	SATELLITE_AXIS magnetometer_z
    }
    
    struct MAGNETORQUER_FRAME 
    {
    	SATELLITE_AXIS magnetorquer1
    	SATELLITE_AXIS magnetorquer2
    	SATELLITE_AXIS magnetorquer3
    }
    
    struct COARSE_SUN_SENSOR_FRAME 
    {
    	SATELLITE_AXIS coarseSunSensor1
    	SATELLITE_AXIS coarseSunSensor2
    	SATELLITE_AXIS coarseSunSensor3
    	SATELLITE_AXIS coarseSunSensor4
    	SATELLITE_AXIS coarseSunSensor5
    	SATELLITE_AXIS coarseSunSensor6
    }
	
	struct ACCELEROMETER_FRAME 
    {
    	SATELLITE_AXIS accelerometer_x
    	SATELLITE_AXIS accelerometer_y
    	SATELLITE_AXIS accelerometer_z
    }
    
    struct FRAMES
    {
    	GYROSCOPE_FRAME gyroscopeFrame
    	MAGNETOMETER_FRAME magnetometerFrame
    	MAGNETORQUER_FRAME magnetorquerFrame
    	COARSE_SUN_SENSOR_FRAME coarseSunSensorFrame
		ACCELEROMETER_FRAME accelerometerFrame
    }
    
    <** @description: Attempt to change the gyroscope coordinate frame. This maps which axis in the satellite frame each gyroscope corresponds to.
        @details: id = 0x00000001, esttc_id = X 
    **>
    method SET_GYROSCOPE_FRAME
    {
        in
        {
            GYROSCOPE_FRAME desiredGyrFrame
        }
        out
        {
            RESULT opResult
        }
    }
    
    <** @description: Get the currently active gyroscope coordinate frame. This maps which axis in the satellite frame each gyroscope corresponds to.
        @details: id = 0x00000002, esttc_id = X
    **>
    method GET_GYROSCOPE_FRAME
    {
        out
        {
            GYROSCOPE_FRAME activeGyrFrame
            RESULT opResult
        }
    }
    
    <** @description: Attempt to change the magnetometer coordinate frame. This maps which axis in the satellite frame each magnetometer axis corresponds to.
        @details: id = 0x00000003, esttc_id = X
    **>
    method SET_MAGNETOMETER_FRAME
    {
        in
        {
            MAGNETOMETER_FRAME desiredMagFrame
        }
        out
        {
            RESULT opResult
        }
    }
    
    <** @description: Get the currently active magnetometer coordinate frame. This maps which axis in the satellite frame each magnetometer axis corresponds to.
        @details: id = 0x0000004, esttc_id = X
    **>
    method GET_MAGNETOMETER_FRAME
    {
        out
        {
        	MAGNETOMETER_FRAME activeMagFrame
            RESULT opResult
        }
    }

    <** @description: Attempt to change the magnetorquer coordinate frame. This maps which axis in the satellite frame each magnetorquer corresponds to.
        @details: id = 0x00000005, esttc_id = X
    **>
    method SET_MAGNETORQUER_FRAME
    {
        in
        {
            MAGNETORQUER_FRAME desiredMtqFrame
        }
        out
        {
            RESULT opResult
        }
    }

    <** @description: Get the currently active magnetorquer coordinate frame. This maps which axis in the satellite frame each magnetorquer corresponds to.
        @details: id = 0x00000006, esttc_id = X
    **>
    method GET_MAGNETORQUER_FRAME
    {
        out
        {
            MAGNETORQUER_FRAME activeMtqFrame
            RESULT opResult
        }
    }
      
    <** @description: Attempt to change the coarse sun sensor coordinate frame. This maps which axis in the satellite frame each coarse sun sensor (css) corresponds to.
        @details: id = 0x00000007, esttc_id = X
    **>
    method SET_COARSE_SUN_SENSOR_FRAME
    {
        in
        {
            COARSE_SUN_SENSOR_FRAME desiredCssFrame
        }
        out
        {
            RESULT opResult
        }
    }
    
    <** @description: Get the currently active coarse sun sensor coordinate frame. This maps which axis in the satellite frame each coarse sun sensor (css) corresponds to.
        @details: id = 0x00000008, esttc_id = X
    **>
    method GET_COARSE_SUN_SENSOR_FRAME
    {
    	out
    	{
    		COARSE_SUN_SENSOR_FRAME activeCssFrame
    		RESULT opResult
    	}
    }
    
    <** @description: Save the active coordinate frame configuration to NVM. THIS SHOULD ONLY BE DONE WHEN YOU ARE SURE THE CONFIG HAS GOOD PERFORMANCE.
     	@details: id = 0x00000009, esttc_id = X
    **>
    method SAVE_COORDSYS_CONFIG
    {
    	out
    	{
    		RESULT opResult
    	}
    }
    
    <** @description: Load the active coordinate frame configuration from NVM.
    @details: id = 0x0000000A, esttc_id = X
    **>
    method LOAD_COORDSYS_CONFIG
    {
    	out
    	{
    		RESULT opResult
    	}
    }
	
	<** @description: Attempt to change the accelerometer coordinate frame. This maps which axis in the satellite frame each accelerometer axis corresponds to.
        @details: id = 0x0000000B, esttc_id = X
    **>
    method SET_ACCELEROMETER_FRAME
    {
        in
        {
            ACCELEROMETER_FRAME desiredAccFrame
        }
        out
        {
            RESULT opResult
        }
    }
    
    <** @description: Get the currently active accelerometer coordinate frame. This maps which axis in the satellite frame each accelerometer axis corresponds to.
        @details: id = 0x000000C, esttc_id = X
    **>
    method GET_ACCELEROMETER_FRAME
    {
        out
        {
        	ACCELEROMETER_FRAME activeAccFrame
            RESULT opResult
        }
    }
}
