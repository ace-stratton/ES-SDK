package endurosat.macif.cp

<** @description: Onboard Computer Command Protocol CubeADCS Gateway Commands Description
    @details: id = 112
**>
interface OBC_CP_CUBEADCS_GATEWAY
{
    version { major 0 minor 1 }

    enumeration CAPTURERESULT
    {
        STARTUP       = 0
        PENDING       = 1
        SUCCESS       = 2
        SUCCESS_SHIFT = 3
        TIMEOUT       = 4
        SRAM_EROOR    = 5
    }

    enumeration FILETYPE
    {
        TLM_Log   = 2
        JPG_Image = 3
        BMP_Image = 4
        Index     = 15
    }

    enumeration ASGP_ERROR
    {
        OFF       = 0
        UNIX_TIME = 1
        POSITION  = 2
        OVERFLOW  = 3
    }

    enumeration EXECUTION_WAYPOINT
    {
        INIT              = 0
        IDLE              = 1
        SENS_ACT_COMM     = 2
        ADCS_UPDATE       = 3
        PER_POW_COM       = 4
        CPU_TEMP_SAMPLE   = 5
        IMG_DOWNLOAD      = 6
        IMG_DECOMPRESS    = 7
        SAVING_IMG        = 8
        LOGGING           = 9
        LOG_FILE_COMPRESS = 10
        SAVING_TO_SD_CARD = 11
        WRITE_TO_FLASH    = 12
    }

    enumeration DETECTIONRESULT
    {
        STARTUP      = 0
        NODETECT     = 1
        PENDING      = 2
        TOOMANYEDGES = 3
        TOOFEWEDGES  = 4
        BADFIT       = 5
        SUNNOTFOUND  = 6
        SUCCESS      = 7
    }

    enumeration GPIO_PORT
    {
        PORT_A = 0
        PORT_B = 1
        PORT_C = 2
        PORT_D = 3
        PORT_E = 4
        PORT_F = 5
    }

    enumeration GPIO_PORT_PIN
    {
        PIN_0 = 0
        PIN_1 = 1
        PIN_2 = 2
        PIN_3 = 3
        PIN_4 = 4
        PIN_5 = 5
        PIN_6 = 6
        PIN_7 = 7
        PIN_8 = 8
        PIN_9 = 9
        PIN_10 = 10
        PIN_11 = 11
        PIN_12 = 12
        PIN_13 = 13
        PIN_14 = 14
        PIN_15 = 15
    }

    enumeration GPS_Solution_Status
    {
        SOlUTION_CORRUPTED                      = 0
        INSUFFICIENT_OBSERVATIONS               = 1
        NO_CONVERGENCE                          = 2
        SINGULARITY                             = 3
        COVARIANCE_TRACE_EXCEEDS_MAX            = 4
        NOT_YET_CONVERGED_FROM_COLD_START       = 5
        HEIGHT_OR_VELOCITY_LIMIT_EXEEDED        = 6
        VARIANCE_LIMITS_EXEEDED                 = 7
        LARGE_RESIDUALS_MAKE_POS_UNRELIABLE     = 8
        CALCULATING_COMPARISON_TO_USER_PROVIDED = 9
        INVALID_FIXED_POSITION                  = 10
        UNAUTHORIZED_POSITION_TYPE              = 11
    }

    enumeration ACP_TYPE
    {
        THREE_AXIS = 0x00
        Y_MOMENTUM = 0x01
    }

    enumeration PROGRAM_Index
    {
		INT_FLASH_PROG = 0x01
		BOOTLOADER	   = 0x02
    }
    
    enumeration BOOT_Status
    {
		NEW_SELECTION = 0x00
		BOOT_SUCCESS  = 0x01
		FAILED_BOOT_1 = 0x02
		FAILED_BOOT_2 = 0x03
		FAILED_BOOT_3 = 0x04
    }

	enumeration BootSetProg_List
	{
		INTERNAL_FLASH_PROGRAM = 0x01
	}

    enumeration SPECIAL_CON_SELECT
    {
        NONE           = 0
        Z_AXIS_SUN     = 1
        GEO_TRACKING   = 2
        INERTIAL_POINT = 3
        Y_AXIS_SUN     = 4
    }

    enumeration ASGP4_FILTER_MODE
    {
        LPF     = 0
        AVERAGE = 1
    }

    enumeration STAR_ID_MODE
    {
        TRACKING_MODE = 0
        LOST_MODE     = 1
    }

    enumeration GPS_SELECT
    {
        NO_GPS      = 0
        NOVATEL_GPS = 1
        SKYFOX_GPS  = 2
    }

    enumeration TCRply_ErrFlag
    {
    	NO_ERR 			= 0
    	INV_TC_ID 		= 1
    	INCORR_LENGTH 	= 2
    	INVALID_PARAMS 	= 3
    	CRC_ERR			= 4
    }

    enumeration CAM_TYPE
    {
        SUN   = 0
        NADIR = 1
    }

    enumeration CAM_SELECT
    {
    	CAM1
    	CAM2
    	STAR
    }
    
    enumeration IMG_SIZE
    {
    	SIZE0
    	SIZE1
    	SIZE2
    	SIZE3
    	SIZE4
    }
    
    enumeration IMSAVE_STATUS
    {
    	NO_ERR
    	TIMEOUT_SENS_UNAVAILABLE
    	TIMEOUT_WAIT_NEXT_FRAME
    	CHECKSUM_ERR
    	SD_CARD_ERR
    }
    
    enumeration ADCS_RUN_Mode
    {
    	OFF			= 0
    	ENABLED 	= 1
    	TRIGGERED  	= 2
    	SIMULATION  = 3
    }

    enumeration ASGP4_RUN_MODE
    {
        OFF = 0
        TRIGGER = 1
        BACKGROUND = 2
        AUGMENT = 3
    }
    
    enumeration PWR_SELECT
    {   
        OFF = 0
        ON = 1
        PWR_SAME = 2
    }

    enumeration CONTROL_Mode
    {
    	NO_CNTRL			= 0
    	DETUMB_CNTRL		= 1
    	Y_THOMSON_SPIN		= 2
    	Y_WHEEL_INITIAL		= 3
    	Y_WHEEL_STEADY		= 4
    	XYZ_WHEEL_CNTRL		= 5
    	SUN_TRACKING		= 6
    	TARGET_TRACKING		= 7
    	VERY_FAST_DETUMB	= 8
    	FAST_DETUMB			= 9
    	USER_MODE_1			= 10
    	USER_MODE_2			= 11
    	STOP_R_WHEELS		= 12
    	USER_CODED_CNTRL	= 13
    	SUN_TRACK_YAW_ROLL	= 14	
    }
    
    enumeration ESTIMATION_Mode
    {
    	NO_ATTIT_EST 					= 0
    	MEMS_RATE_SENS 					= 1
    	MTM_RATE_FILTER 				= 2
    	MTM_RATE_FILTER_WITH_PITCH_EST	= 3
    	MTM_AND_FINE_SUN_TRIAD			= 4
    	FULL_STATE_EKF					= 5
    	MEMS_GYRO_EKF					= 6
    	USER_CODED_EST_MODE 			= 7
    }
    
    enumeration AXIS_SELECT
    {
    	POSITIVE_X
    	NEGATIVE_X
    	POSITIVE_Y
    	NEGATIVE_Y
    	POSITIVE_Z
    	NEGATIVE_Z
    	NOT_USED
    }
    
    enumeration MTM_MODE
    {
    	MAIN_MTM_SAMP_THROUGH_SIGNAL
    	REDUN_MTM_SAMP_THROUGH_SIGNAL
    	MAIN_MTM_SAMP_THROUGH_MOTOR
    	NONE	
    }
    
    enumeration JPG_CONV_RESULT
    {

        NO_CONV_YET   = 0x00
        SUCCESS       = 0x01
        FILE_LOAD_ERR = 0x02
        BUSY          = 0x04

    }

    enumeration UNIX_TIME_SAVE_Cfg
    {
    	SAVE_NOW        = 0x01
    	SAVE_ON_UPDATE  = 0x02
    	SAVE_PERIODIC   = 0x04
    }

    enumeration FILE_UPLOAD_DEST
    {
        EEPROM          = 2
        Flash_Program_1 = 3
        Flash_Program_2 = 4
        Flash_Program_3 = 5
        Flash_Program_4 = 6
        Flash_Program_5 = 7
        Flash_Program_6 = 8
        Flash_Program_7 = 9
        SD_User_File_1  = 10
        SD_User_File_2  = 11
        SD_User_File_3  = 12
        SD_User_File_4  = 13
        SD_User_File_5  = 14
        SD_User_File_6  = 15
        SD_User_File_7  = 16
        SD_User_File_8  = 17
    }

    <** @description: Bit-masks for the TLM197, Byte 0 **>
    enumeration TLM197_Byte0
    {
        CubeCtrl_Signal_PWR = 0x03
        CubeCtrl_Motor_PWR  = 0x0C
        CubeSense1_PWR      = 0x30
        CubeSense2_PWR      = 0xC0
    }

    <** @description: Bit-masks for the TLM197, Byte 1 **>
    enumeration TLM197_Byte1
    {
        CubeStar_PWR        = 0x03
        CubeWheel1_PWR      = 0x0C
        CubeWheel2_PWR      = 0x30
        CubeWheel3_PWR      = 0xC0
    }

    <** @description: Bit-masks for the TLM197, Byte 2 **>
    enumeration TLM197_Byte2
    {
        Motor_ON       = 0x00
        Motor_OFF      = 0x01
        Motor_PWR_SAME = 0x02
        GPS_ON         = 0x03
        GPS_OFF        = 0x04
        GPS_PWR_SAME   = 0x05
    }

    <** @description: Bit-masks for the TLM132_App , Byte 0 **>
    enumeration TLM132_App_Byte0
    {
    	ATT_EST_MODE	= 0x0F
    	CONTROL_MODE	= 0xF0
    }
    
    <** @description: Bit-masks for the TLM132_App , Byte 1 **>
    enumeration TLM132_App_Byte1
    {
    	ADCS_RUN_MODE			= 0x03
    	ASGP4_MODE				= 0x0C
    	CUBECONTROL_SIGNAL_EN	= 0x10
    	CUBECONTROL_MOTOR_EN	= 0x20
    	CUBESENSE1_EN			= 0x40
    	CUBESENSE2_EN			= 0x80
    }
    
    <** @description: Bit-masks for the TLM132_App , Byte 2 **>
    enumeration TLM132_App_Byte2
    {
    	CUBEWHEEL1_EN	    = 0x01
    	CUBEWHEEL2_EN	    = 0x02
    	CUBEWHEEL3_EN	    = 0x04
    	CUBESTAR_EN		    = 0x08
    	GPS_RX_EN		    = 0x10
    	GPS_LNA_EN		    = 0x20
    	MOTOR_DRV_EN		= 0x40
    	SUN_ABOVE_HORIZON	= 0x80
    }
    
    <** @description: Bit-masks for the TLM132_App , Byte 3 **>
    enumeration TLM132_App_Byte3
    {
    	CUBESENSE1_COMM_ERR 	=  0x01
    	CUBESENSE2_COMM_ERR 	=  0x02
    	CUBECONTROL_COMM_ERR 	=  0x04
    	CUBEMOTOR_COMM_ERR 		=  0x08
    	CUBEWHEEL1_COMM_ERR 	=  0x10
    	CUBEWHEEL2_COMM_ERR 	=  0x20
    	CUBEWHEEL3_COMM_ERR 	=  0x40
    	CUBESTAR_COMM_ERR		=  0x80
    }
    
    <** @description: Bit-masks for the TLM132_App , Byte 4 **>
    enumeration TLM132_App_Byte4
    {
    	MAG_RANGE_ERR			= 0x01
    	CAM1_SRAM_OVERCURRENT 	= 0x02
    	CAM1_3V3_OVERCURRENT 	= 0x04
    	CAM1_BUSY_ERR 			= 0x08
    	CAM1_DETECT_ERR			= 0x10
    	SUN_DETECTION_ERR 		= 0x20
    	CAM2_SRAM_OVERCURRENT 	= 0x40
    	CAM2_3V3_OVERCURRENT	= 0x80
    }
    
    <** @description: Bit-masks for the TLM132_App , Byte 5 **>
    enumeration TLM132_App_Byte5
    {
    	CAM2_BUSY_ERR 			= 0x01
    	CAM2_DETECT_ERR 		= 0x02
    	NADIR_RANGE_ERR 		= 0x04
    	RATE_RANGE_ERR 			= 0x08
    	WHEEL_SPEED_RANGE_ERR 	= 0x10
    	COARSE_SUN_RANGE_ERR 	= 0x20
    	STAR_MATCH_ERR 			= 0x40
    	STAR_OVERCURRENT 		= 0x80
    }

    <** @description: Bit-masks for the TLM135 **>
    enumeration TLM135_Byte0
    {
    	ADCS_CONFIG_LOAD_ERR   = 0x01
    	ORBIT_PARAM_LOAD_ERR   = 0x02
    	SYS_CONFIG_LOAD_ERR	   = 0x04
    	SD_INIT_ERR			   = 0x08
    	SD_READ_ERR 	       = 0x10
    	SD_WRITE_ERR 	       = 0x20
    }

    <** @description: Bit-mask for the TLM144_app **>
    enumeration TLM144_Error_bit_mask
    {
        TLM_BUFFER_OVERRUN  = 0x01
        UART_PROTOCOL_ERROR = 0x02
        UART_INCOMPLT_MSG   = 0x04
        I2C_TLM_ERROR       = 0x08
        I2C_TC_BUFFER_ERROR = 0x10
        CAN_TC_BUFFER_ERROR = 0x20
    }

    <** @description: Bit-masks for the TLM224, Byte 0 **>
    enumeration TLM224_Byte0
    {
    	ORBITPARAM_INVALID 	= 0x01
    	CONFIG_INVALID		= 0x02
    	CNTRLMODECHG_X		= 0x04
    	EST_CHG_X			= 0x08
    	MGNTMR_SAMPLE_MODE	= 0x30
    	DIFF_MAGNETIC_FIELD	= 0x40
    	NODE_RECOVERY_ERR	= 0x80
   	}
   	
   	<** @description: Bit-masks for the TLM224, Byte 1 **>
    enumeration TLM224_Byte1
    {
    	CUBESENSE1_ERR			= 0x01
    	CUBESENSE2_ERR			= 0x02
    	CUBECONTROLSIGNAL_ERR   = 0x04
    	CUBECONTROLMOTOR_ERR    = 0x08
    	CUBEWHEEL1_ERR          = 0x10
    	CUBEWHEEL2_ERR          = 0x20
    	CUBEWHEEL3_ERR          = 0x40
    	CUBESTAR_ERR            = 0x80
   	}

   	<** @description: Bit-masks for the TLM224, Byte 2 **>
    enumeration TLM224_Byte2
    {
    	MAGNETOMETER_ERR	= 0x01
    	RATESENSOR_ERR		= 0x02
    	RES		            = 0xFC
   	}

   	<** @description: Bit-masks for the TLM225, Byte 164**>
    enumeration TLM225_Byte164
    {
        GPIO_PORT CC_EN_Port = 0x0F
        GPIO_PORT_PIN CC_EN_Pin = 0xF0
   	}

    <** @description: Bit-masks for the TLM225, Byte 165**>
    enumeration TLM225_Byte165
    {
        GPIO_PORT CC_Motor_Port = 0x0F
        GPIO_PORT_PIN CC_Motor_Pin = 0xF0
   	}

    <** @description: Bit-masks for the TLM225, Byte 166**>
    enumeration TLM225_Byte166
    {
        GPIO_PORT CC_Common_Port = 0x0F
        GPIO_PORT_PIN CC_Common_Pin = 0xF0
   	}

    <** @description: Bit-masks for the TLM225, Byte 167**>
    enumeration TLM225_Byte167
    {
        GPIO_PORT CubeSense1_EN_Port = 0x0F
        GPIO_PORT_PIN CubeSense1_EN_Pin = 0xF0
   	}

    <** @description: Bit-masks for the TLM225, Byte 168**>
    enumeration TLM225_Byte168
    {
        GPIO_PORT CubeSense2_EN_Port = 0x0F
        GPIO_PORT_PIN CubeSense2_EN_Pin = 0xF0
   	}
    
    <** @description: Bit-masks for the TLM225, Byte 169**>
    enumeration TLM225_Byte169
    {
        GPIO_PORT CubeStar_EN_Port = 0x0F
        GPIO_PORT_PIN CubeStar_EN_Pin = 0xF0
   	}   
  
    <** @description: Bit-masks for the TLM225, Byte 170**>
    enumeration TLM225_Byte170
    {
        GPIO_PORT CubeWheel1_EN_Port = 0x0F
        GPIO_PORT_PIN CubeWheel1_EN_Pin = 0xF0
   	} 

    <** @description: Bit-masks for the TLM225, Byte 171**>
    enumeration TLM225_Byte171
    {
        GPIO_PORT CubeWheel2_EN_Port = 0x0F
        GPIO_PORT_PIN CubeWheel2_EN_Pin = 0xF0
   	} 

    <** @description: Bit-masks for the TLM225, Byte 172**>
    enumeration TLM225_Byte172
    {
        GPIO_PORT CubeWheel3_EN_Port = 0x0F
        GPIO_PORT_PIN CubeWheel3_EN_Pin = 0xF0
   	} 

    struct Boot_Config
    {

        PROGRAM_Index Boot_Index

    }

    struct TCRply_Struct
    {
    	UInt8 TC_ID
    	TCRply_ErrFlag TC_ErrFlag
    }
    
    struct EST_PARAMS_Struct
    {
    	Float MTM_RateFilt_Sys_Noise
    	Float EKF_Sys_Noise
    	Float CSS_Meas_Noise
    	Float SunSens_Meas_Noise
    	Float NadirSens_Meas_Noise
    	Float MTM_Meas_Noise
    	Float StarTrack_Meas_Noise
    	UInt8 Byte29
    	UInt8 Byte30
    	UInt8 Byte31
    }
    
    struct RATE_GYRO_CFG_Struct
    {
    	AXIS_SELECT Gyro1
    	AXIS_SELECT Gyro2
    	AXIS_SELECT Gyro3
    	Int16		X_Sens_Offset
    	Int16		Y_Sens_Offset
    	Int16		Z_Sens_Offset
    	UInt8		RateSensMult
    }
    
    struct CUBESENSE_Struct
    {
    	Int16 	Cam1_Mount_Alpha_Angle
    	Int16 	Cam1_Mount_Beta_Angle
    	Int16 	Cam1_Mount_Gamma_Angle
    	UInt8 	Cam1_Detect_Thresh
    	UInt8   Cam1_Auto_Adj_Mode
    	UInt16 	Cam1_Exposure_Time
    	UInt16 	Cam1_BoreSight_X
    	UInt16 	Cam1_BoreSight_Y
    	Int16 	Cam2_Mount_Alpha_Angle
    	Int16 	Cam2_Mount_Beta_Angle
    	Int16 	Cam2_Mount_Gamma_Angle
    	UInt8 	Cam2_Detect_Thresh
    	UInt8   Cam2_Auto_Adj_Mode
    	UInt16 	Cam2_Exposure_Time
    	UInt16 	Cam2_BoreSight_X
    	UInt16 	Cam2_BoreSight_Y
    	UInt8	Nadir_Max_Dev_Perc
    	UInt8	Nadir_Max_Bad_Edges
    	UInt8	Nadir_Max_Radius
    	UInt8	Nadir_Min_Radius
    	UInt16	Cam1_MinX_Area_1
    	UInt16	Cam1_MaxX_Area_1
    	UInt16	Cam1_MinY_Area_1
    	UInt16	Cam1_MaxY_Area_1
    	UInt16	Cam1_MinX_Area_2
    	UInt16	Cam1_MaxX_Area_2
    	UInt16	Cam1_MinY_Area_2
    	UInt16	Cam1_MaxY_Area_2
    	UInt16	Cam1_MinX_Area_3
    	UInt16	Cam1_MaxX_Area_3
    	UInt16	Cam1_MinY_Area_3
    	UInt16	Cam1_MaxY_Area_3
    	UInt16	Cam1_MinX_Area_4
    	UInt16	Cam1_MaxX_Area_4
    	UInt16	Cam1_MinY_Area_4
    	UInt16	Cam1_MaxY_Area_4
        UInt16	Cam1_MinX_Area_5
    	UInt16	Cam1_MaxX_Area_5
    	UInt16	Cam1_MinY_Area_5
    	UInt16	Cam1_MaxY_Area_5
    	UInt16	Cam2_MinX_Area_1
    	UInt16	Cam2_MaxX_Area_1
    	UInt16	Cam2_MinY_Area_1
    	UInt16	Cam2_MaxY_Area_1
    	UInt16	Cam2_MinX_Area_2
    	UInt16	Cam2_MaxX_Area_2
    	UInt16	Cam2_MinY_Area_2
    	UInt16	Cam2_MaxY_Area_2
    	UInt16	Cam2_MinX_Area_3
    	UInt16	Cam2_MaxX_Area_3
    	UInt16	Cam2_MinY_Area_3
    	UInt16	Cam2_MaxY_Area_3
    	UInt16	Cam2_MinX_Area_4
    	UInt16	Cam2_MaxX_Area_4
    	UInt16	Cam2_MinY_Area_4
    	UInt16	Cam2_MaxY_Area_4
        UInt16	Cam2_MinX_Area_5
    	UInt16	Cam2_MaxX_Area_5
    	UInt16	Cam2_MinY_Area_5
    	UInt16	Cam2_MaxY_Area_5
    }

    struct CUBESTAR_Struct
    {
    	Int16 	StarTracker_Mount_Alpha_Angle
    	Int16 	StarTracker_Mount_Beta_Angle
    	Int16 	StarTracker_Mount_Gamma_Angle
    	UInt16 	StarTracker_Exposure_Time
    	UInt16	StarTracker_Analog_Gain
    	UInt8	StarTracker_Detection_Thresh
    	UInt8	StarTracker_Star_Threshold
    	UInt8	StarTracker_Max_Star_Matched
    	UInt16	Detection_Timeout_Duration
    	UInt8	Max_Star_Pixel
    	UInt8	Min_Star_Pixel
    	UInt8	StarTracker_Err_Margin
    	UInt16	StarTracker_Delay_Time
    	Float	StarTracker_Centroid_X
    	Float 	StarTracker_Centroid_Y
    	Float	StarTracker_Focal_Length
    	Float	K1_Rad_Dist_Coeff
    	Float	K2_Rad_Dist_Coeff
    	Float	P1_Tang_Dist_Coeff
    	Float	P2_Tang_Dist_Coeff
    	UInt8	StarTracking_Window_Width
    	UInt8	StarTracking_Margin
    	UInt8	StarValidation_Margin
    	UInt8	StarTracking_Module_Location_Prediction_Enable
    	UInt8	StarTracking_Search_Width

    }
    
    struct RWHEELS_CFG_Struct
    {
    	Float RWheel_Proport_Gain
    	Float RWheel_Deriv_Gain
    	Float Y_Wheel_Bias_Momentum
    	UInt8 SunPointAndAutoCntrlTransition
    }
    
    struct TARGET_REF_Struct
    {
    	Float Geocentric_Longitude
    	Float Geocentric_Latitude
    	Float Geocentric_Altitude
    }
    
    struct COMMANDED_ATTITUDE_Angles_Struct
    {
    	Int16 Angle_Roll
    	Int16 Angle_Pitch
    	Int16 Angle_Yaw
    }
    
    struct MTQ_CFG_Struct
    {
    	AXIS_SELECT MTQ1
    	AXIS_SELECT MTQ2
    	AXIS_SELECT MTQ3
    }

    struct WHEEL_CFG_Struct
    {
        AXIS_SELECT RW1
        AXIS_SELECT RW2
        AXIS_SELECT RW3
        AXIS_SELECT RW4
    }

    struct CSS_CFG
    {
    	AXIS_SELECT CSS1
    	AXIS_SELECT CSS2
    	AXIS_SELECT CSS3
    	AXIS_SELECT CSS4
    	AXIS_SELECT CSS5
    	AXIS_SELECT CSS6
    	AXIS_SELECT CSS7
        AXIS_SELECT CSS8
        AXIS_SELECT CSS9
        AXIS_SELECT CSS10
        <** @description: CSS_rel_scale - Array correspongind to CSS relative scale values
            @details: size = 10  **>
    	UInt8[] CSS_rel_scale
        UInt8 CSS_threshold
    }

    struct SDLog_Struct
    {
    	<** @description: Log Selection - up to 80 flags indicating which telemetry frames should be logged
            @details: size = 10 **>
    	UInt8[] LogSelection
    	UInt16  LogPeriod
    	UInt8	LogDestination
    }
    
    struct UNIXTime_Struct
    {
    	UInt32 CurrentUnixTime
    	UInt16 Milliseconds
    }
    
    struct UNIXTime_SaveCfg_Struct
    {
    	UNIX_TIME_SAVE_Cfg SaveCfg
    	UInt8			   Period
    }
    
    struct SGP4_OrbParams_Struct
    {
    	Double Inclination
    	Double Eccentricity
    	Double RAAN
    	Double ArgOfPerigee
    	Double B_Star_Drag_Term
    	Double Mean_Motion
    	Double Mean_Anomaly
    	Double Epoch
    }

    struct UART_log_cfg
    {
    	<** @description: Log Selection - up to 80 flags indicating which telemetry frames should be logged
            @details: size = 10 **>
    	UInt8[] LogSelection
    	UInt16  LogPeriod
    }    

    struct ADCS_sim_data
    {
        UInt32 Unix_Time
        <** @description: Array, corresponds to CSS Raw Values
        @details: size = 10 **>
    	UInt16[] LogSelection
        Int16 Cam1_Raw_X
        Int16 Cam1_Raw_Y
        UInt8 Cam1_Busy
        UInt8 Cam1_Result
        Int16 Cam2_Raw_X
        Int16 Cam2_Raw_Y
        UInt8 Cam2_Busy
        UInt8 Cam2_Result
        Int16 Mag_Raw_X
        Int16 Mag_Raw_Y
        Int16 Mag_Raw_Z
        Int32 Rate_Raw_X
        Int32 Rate_Raw_Y
        Int32 Rate_Raw_Z
        Int16 Wheel_Raw_X
        Int16 Wheel_Raw_Y
        Int16 Wheel_Raw_Z
        Int16 Star1_Camera_X
        Int16 Star1_Camera_Y
        Int16 Star1_Camera_Z
        Int16 Star1_Inertial_X
        Int16 Star1_Inertial_Y
        Int16 Star1_Inertial_Z
        Int16 Star2_Camera_X
        Int16 Star2_Camera_Y
        Int16 Star2_Camera_Z
        Int16 Star2_Inertial_X
        Int16 Star2_Inertial_Y
        Int16 Star2_Inertial_Z
        Int16 Star3_Camera_X
        Int16 Star3_Camera_Y
        Int16 Star3_Camera_Z
        Int16 Star3_Inertial_X
        Int16 Star3_Inertial_Y
        Int16 Star3_Inertial_Z
        GPS_Solution_Status GPS_Stat
        UInt16 GPS_Ref_Week
        UInt32 GPS_Time
        Int32 ECEF_X
        Int16 ECEF_V_X
        Int32 ECEF_Y
        Int16 ECEF_V_Y
        Int32 ECEF_Z
        Int16 ECEF_V_Z
        UInt8 X_Pos_StdDiv
        UInt8 Y_Pos_StdDiv
        UInt8 Z_Pos_StdDiv
        UInt8 X_Vel_StdDiv
        UInt8 Y_Vel_StdDiv
        UInt8 Z_Vel_StdDiv
    }

    struct Conv_to_JPG_Struct
    {
        UInt8 Source_File_Container
        UInt8 Quality_Factor
        UInt8 White_Balance
    }

    struct Erase_File_Struct
    {
        FILETYPE File_Type
        UInt8 File_Counter
        UInt8 Erase_All
    }

    struct File_Dwnd_Buffer_Struct
    {
        FILETYPE File_Type
        UInt8 Counter
        UInt32 Offset
        UInt16 Block_Length
    }

    struct File_Upload_Struct
    {
        FILE_UPLOAD_DEST Destination
        UInt8 Block_size
    }
    
    struct File_Upload_Packet_Struct
    {
        UInt16 Packet_Number
        <** @description: File Bytes
            @details: size = 20  **>
    	UInt8[] Buffer
    }
    
    struct Finalize_Upload_Block_Struct
    {
        FILE_UPLOAD_DEST Destination
        UInt32 Offset
        UInt16 Block_Length
    }

    struct Download_Burst_Struct
    {
        UInt8 Message_Length
        UInt8 Ignore_Hole_Map
    }

    struct Hole_Map_Struct
    {
        <** @description: Hole Map Array
            @details: size = 16  **>
        UInt8[] Buffer
    }

    struct TLM128_Struct
    {
    	UInt8 TLM_ID
		UInt8 NodeType
		UInt8 InterfaceVersion
		UInt8 FWVersionMajor
		UInt8 FWVersionMinor
		UInt16 RuntimeS
		UInt16 RuntimeMs
    }

    struct TLM129_Struct
    {
    	UInt8 TLM_ID
		UInt8 ResetAndBoot
		UInt16 BootCnt
		UInt8 BootProgIndx
		UInt8 FWVersionMajor
		UInt8 FWVersionMinor
    }

	struct TLM130_Struct
    {
    	UInt8 TLM_ID
		PROGRAM_Index ProgramIndex
		BOOT_Status BootStatus
    }

    struct TLM131_Struct
    {
    	UInt8 TLM_ID
		UInt8 Enabled_State
    }
    
    struct TLM132_APP_Struct
    {
    	UInt8 TLM_ID
    	<** @description: Bit-field, mapping corresponds to TLM132_App_Byte0 **>
    	UInt8	Byte0
    	<** @description: Bit-field, mapping corresponds to TLM132_App_Byte1 **>
    	UInt8	Byte1
    	<** @description: Bit-field, mapping corresponds to TLM132_App_Byte2 **>
    	UInt8	Byte2
    	<** @description: Bit-field, mapping corresponds to TLM132_App_Byte3 **>
    	UInt8	Byte3
    	<** @description: Bit-field, mapping corresponds to TLM132_App_Byte4 **>
    	UInt8	Byte4
    	<** @description: Bit-field, mapping corresponds to TLM132_App_Byte5 **>
    	UInt8	Byte5
    }
	struct TLM132_Boot_Struct
    {
    	UInt8 TLM_ID
    	UInt16	UpTime
    	UInt8	Byte2
		UInt8	Byte3
		<** @description: Unused **>
		UInt8	Byte4
		<** @description: Unused **>
		UInt8	Byte5
    }

    struct TLM133_Struct
    {
        UInt8 TLM_ID
        UInt8 Progress_Percentage
        JPG_CONV_RESULT JPG_Conv_Res
        UInt8 Output_File
    }

    struct TLM134_APP_Struct
    {
        UInt8  TLM_ID
        UInt16 Scrub_Size
    }

    struct TLM135_Struct 
    {
        UInt8  TLM_ID
        <** @description: Bit-field, mapping corresponds to TLM135_Byte0 **>
        UInt8  Bools
    }

    struct TLM141_Struct 
    {
        UInt8  TLM_ID
        UInt32  Event_time
        UInt8   Event_ID
        UInt8   Event_parameter
    }

    struct TLM142_Struct
    {
        UInt8  TLM_ID
        UInt16  SRAM1_latchup_num
        UInt16  SRAM2_latchup_num
    }

    struct TLM143_Struct
    {
        UInt8  TLM_ID
        UInt16  s_SRAM_upsets
        UInt16  d_SRAM_upsets
        UInt16  m_SRAM_upsets
    }

    struct TLM144_Struct
    {
        UInt8  TLM_ID
        UInt16  TC_num
        UInt16  TLM_num
        TLM144_Error_bit_mask Errors  
    }

    struct TLM146_Struct
    {
    	UInt8 TLM_ID
    	Int16 Roll_Ang
    	Int16 Pitch_Ang
    	Int16 Yaw_Ang
    }

    struct TLM147_Struct
    {
    	UInt8 TLM_ID
    	Int16 EstX_AngRate
    	Int16 EstY_AngRate
    	Int16 EstZ_AngRate
    }

    struct TLM148_Struct
    {
        UInt8  TLM_ID
        Int16  X
        Int16  Y
        Int16  Z
    }

    struct TLM149_Struct
    {
        UInt8  TLM_ID
        Int16  V_x
        Int16  V_y
        Int16  V_z
    }

    struct TLM150_Struct
    {
    	UInt8 TLM_ID
    	Int16 Latitude
    	Int16 Longitude
    	UInt16 Altitude
    }
    
    struct TLM151_Struct
    {
    	UInt8 TLM_ID
    	Int16 MagField_X
    	Int16 MagField_Y
    	Int16 MagField_Z
    }

    struct TLM152_Struct
    {
    	UInt8 TLM_ID
    	Int16 Coarse_Sun_X
    	Int16 Coarse_Sun_Y
    	Int16 Coarse_Sun_Z
    }

    struct TLM153_Struct
    {
    	UInt8 TLM_ID
    	Int16 Sun_X
    	Int16 Sun_Y
    	Int16 Sun_Z
    }
    
    struct TLM154_Struct
    {
    	UInt8 TLM_ID
    	Int16 Nadir_X
    	Int16 Nadir_Y
    	Int16 Nadir_Z
    }
    
    struct TLM155_Struct
    {
    	UInt8 TLM_ID
    	Int16 X_AngRate
    	Int16 Y_AngRate
    	Int16 Z_AngRate
    }
    
    struct TLM156_Struct
    {
    	UInt8 TLM_ID
    	Int16 Wheel_Speed_X
    	Int16 Wheel_Speed_Y
    	Int16 Wheel_Speed_Z
    }
    
    struct TLM157_Struct
    {
    	UInt8 TLM_ID
    	Int16 MTQ_Cmd_X
    	Int16 MTQ_Cmd_Y
    	Int16 MTQ_Cmd_Z
    }
    
    struct TLM158_Struct
    {
    	UInt8  TLM_ID
    	Int16 CmdWheelSpeed_X
    	Int16 CmdWheelSpeed_Y
    	Int16 CmdWheelSpeed_Z
    }
    
    struct TLM159_Struct
    {
    	UInt8  TLM_ID
    	Int16 Field_X
    	Int16 Field_Y
    	Int16 Field_Z
    }

    struct TLM160_Struct
    {
    	UInt8 TLM_ID
    	Int16 Sun_X
    	Int16 Sun_Y
    	Int16 Sun_Z
    }

    struct TLM161_Struct
    {
    	UInt8 TLM_ID
    	Int16 EstGyroBias_X
    	Int16 EstGyroBias_Y
    	Int16 EstGyroBias_Z
    }
    
    struct TLM162_Struct
    {
    	UInt8 TLM_ID
    	Int16 InnovVect_X
    	Int16 InnovVect_Y
    	Int16 InnovVect_Z
    }
    
    struct TLM163_Struct
    {
    	UInt8 TLM_ID
    	Int16 Err_Q1
    	Int16 Err_Q2
    	Int16 Err_Q3
    }

    struct TLM164_Struct
    {
    	UInt8 TLM_ID
    	Int16 RMS_Q1
    	Int16 RMS_Q2
    	Int16 RMS_Q3
    }

    struct TLM165_Struct
    {
    	UInt8 TLM_ID
    	Int16 RMS_X   
    	Int16 RMS_Y
    	Int16 RMS_Z
    }

    struct TLM166_Struct
    {
    	UInt8 TLM_ID
    	Int16 Centroid_X_CAM2   
    	Int16 Centroid_Y_CAM2
    	CAPTURERESULT CAM2_Capture
        DETECTIONRESULT CAM2_Detection
    }

    struct TLM167_Struct
    {
    	UInt8 TLM_ID
    	Int16 Centroid_X_CAM1   
    	Int16 Centroid_Y_CAM1
    	CAPTURERESULT CAM1_Capture
        DETECTIONRESULT CAM1_Detection
    }

    struct TLM168_Struct
    {
    	UInt8 TLM_ID
    	UInt8 CSS1
        UInt8 CSS2
        UInt8 CSS3
    	UInt8 CSS4
        UInt8 CSS5
        UInt8 CSS6
    }

    struct TLM169_Struct
    {
    	UInt8 TLM_ID
    	UInt8 CSS7
        UInt8 CSS8
        UInt8 CSS9
    	UInt8 CSS10
    }

    struct TLM170_Struct
    {
    	UInt8 TLM_ID
    	Int16 MagX
    	Int16 MagY
    	Int16 MagZ
    }

    struct TLM171_Struct
    {
    	UInt8 TLM_ID
    	UInt16 Data_3V3_Current
    	UInt16 Cam_SRAM_Current
    }

    struct TLM172_Struct
    {
    	UInt8 TLM_ID
    	UInt16 I_3V3
    	UInt16 I_5V
    	UInt16 I_Vbat
    }

    struct TLM173_Struct
    {
    	UInt8 TLM_ID
    	UInt16 Wheel_1_Current
    	UInt16 Wheel_2_Current
    	UInt16 Wheel_3_Current
    }

    struct TLM174_Struct
    {
    	UInt8 TLM_ID
    	Int16 ADCS_MCU_Temp
    	Int16 MTM_Temp
    	Int16 RMTM_Temp
    }

    struct TLM175_Struct
    {
    	UInt8 TLM_ID
    	Int16 X_Sensor_Temp
    	Int16 Y_Sensor_Temp
    	Int16 Z_Sensor_Temp
    }

    struct TLM176_Struct
    {
        UInt8 TLM_ID
        GPS_Solution_Status GPS_Stat
        UInt8 N_Sat_Tracked
        UInt8 N_Sat_Used
        UInt8 XYZ_Lof_Count
        UInt8 RANGE_Log_Count
        UInt8 Log_Setup_Response
    }

    struct TLM177_Struct
    {
        UInt8 TLM_ID
        UInt16 GPS_Ref_Week
        UInt32 GPS_Time
    }

    struct TLM178_Struct
    {
        UInt8 TLM_ID
        Int32 ECEF_X
        Int16 ECEF_V_X
    }

    struct TLM179_Struct
    {
        UInt8 TLM_ID
        Int32 ECEF_Y
        Int16 ECEF_V_Y
    }

    struct TLM180_Struct
    {
        UInt8 TLM_ID
        Int32 ECEF_Z
        Int16 ECEF_V_Z
    }

    struct TLM181_Struct
    {
        UInt8 TLM_ID
        Int16 Star1BX
        Int16 Star1BY
        Int16 Star1BZ
    }

    struct TLM182_Struct
    {
        UInt8 TLM_ID
        Int16 Star2BX
        Int16 Star2BY
        Int16 Star2BZ
    }

    struct TLM183_Struct
    {
        UInt8 TLM_ID
        Int16 Star3BX
        Int16 Star3BY
        Int16 Star3BZ
    }

    struct TLM184_Struct
    {
        UInt8 TLM_ID
        Int16 Star1OX
        Int16 Star1OY
        Int16 Star1OZ
    }


    struct TLM185_Struct
    {
        UInt8 TLM_ID
        Int16 Star2OX
        Int16 Star2OY
        Int16 Star2OZ
    }

    struct TLM186_Struct
    {
        UInt8 TLM_ID
        Int16 Star3OX
        Int16 Star3OY
        Int16 Star3OZ
    }

    struct TLM187_Struct
    {
        UInt8 TLM_ID
        UInt16 Mag_Star1
        UInt16 Mag_Star2
        UInt16 Mag_Star3
    }

    struct TLM188_Struct
    {
        UInt8 TLM_ID
        UInt8 Num_Star_Detected
        UInt8 Star_Image_Noise
        UInt8 Num_Inv_Star_Detected
        UInt8 Num_Star_Identified
        STAR_ID_MODE Identification_mode
        UInt8 Center_line_avg
    }

    struct TLM189_Struct
    {
        UInt8 TLM_ID
        UInt16 Capture_time
        UInt16 Detection_Time
        UInt16 Identification_time
    }

    struct TLM190_Struct
    {
        UInt8 TLM_ID
        <** @description: Bit-field, mapping corresponds to TLM132_App **>
    	UInt8	Byte0
    	<** @description: Bit-field, mapping corresponds to TLM132_App **>
    	UInt8	Byte1
    	<** @description: Bit-field, mapping corresponds to TLM132_App **>
    	UInt8	Byte2
    	<** @description: Bit-field, mapping corresponds to TLM132_App **>
    	UInt8	Byte3
    	<** @description: Bit-field, mapping corresponds to TLM132_App **>
    	UInt8	Byte4
    	<** @description: Bit-field, mapping corresponds to TLM132_App **>
    	UInt8   Byte5
        <** @description: Bit-field, mapping corresponds to TLM224, Byte 0 **>
        UInt8   Byte6
        <** @description: Bit-field, mapping corresponds to TLM224, Byte 1 **>
        UInt8   Byte7
        <** @description: Bit-field, mapping corresponds to TLM224, Byte 2 **>
        UInt8   Byte8
        UInt8 Empty_Byte0
        UInt8 Empty_Byte1
        UInt8 Empty_Byte2
        Int16 est_Roll_Angle
        Int16 est_Pitch_Angle
        Int16 est_Yaw_Angle
        Int16 est_q1
        Int16 est_q2
        Int16 est_q3
        Int16 est_X_AngRate
        Int16 est_Y_AngRate
        Int16 est_Z_AngRate
        Int16 X_pos
        Int16 Y_pos
        Int16 Z_pos
        Int16 V_x
        Int16 V_y
        Int16 V_z
        Int16 Latitude
        Int16 Longitude
        UInt16 Altitude
        Int16 ECEF_X
        Int16 ECEF_Y
        Int16 ECEF_Z
    }

    struct TLM191_Struct
    {
    	UInt8 TLM_ID
		Int16 MagField_X
		Int16 MagField_Y
		Int16 MagField_Z
		Int16 CoarseSun_X
		Int16 CoarseSun_Y
		Int16 CoarseSun_Z
		Int16 Sun_X
		Int16 Sun_Y
		Int16 Sun_Z
		Int16 Nadir_X
		Int16 Nadir_Y
		Int16 Nadir_Z
		Int16 AngRate_X
		Int16 AngRate_Y
		Int16 AngRate_Z
		Int16 WheelSpeed_X
		Int16 WheelSpeed_Y
		Int16 WheelSpeed_Z
		Int16 Star1B_X
		Int16 Star1B_Y
		Int16 Star1B_Z
		Int16 Star1O_X
		Int16 Star1O_Y
		Int16 Star1O_Z
		Int16 Star2B_X
		Int16 Star2B_Y
		Int16 Star2B_Z
		Int16 Star2O_X
		Int16 Star2O_Y
		Int16 Star2O_Z
		Int16 Star3B_X
		Int16 Star3B_Y
		Int16 Star3B_Z
		Int16 Star3O_X
		Int16 Star3O_Y
		Int16 Star3O_Z
    }

    struct TLM192_Struct
    {
        UInt8 TLM_ID
        Int16 X_MTQ_Ontime
        Int16 Y_MTQ_Ontime
        Int16 Z_MTQ_Ontime
        Int16 X_Wheel_Speed
        Int16 Y_Wheel_Speed
        Int16 Z_Wheel_Speed
    }

    struct TLM193_Struct
    {
        UInt8 TLM_ID
        Int16 IGRF_MagField_X
        Int16 IGRF_MagField_Y
        Int16 IGRF_MagField_Z
        Int16 Modelled_Sun_V_X
        Int16 Modelled_Sun_V_Y
        Int16 Modelled_Sun_V_Z
        Int16 EstGyroBias_X
        Int16 EstGyroBias_Y
        Int16 EstGyroBias_Z
        Int16 Innovation_Vec_X
        Int16 Innovation_Vec_Y
        Int16 Innovation_Vec_Z
        Int16 Err_Q1
        Int16 Err_Q2
        Int16 Err_Q3
        Int16 RMS_Q1
        Int16 RMS_Q2
        Int16 RMS_Q3
        Int16 X_AngRate_Cov
        Int16 Y_AngRate_Cov
        Int16 Z_AngRate_Cov
    }

    struct TLM194_Struct
    {
        UInt8 TLM_ID
        Int16 Centroid_X_CAM2
        Int16 Centroid_Y_CAM2
        CAPTURERESULT CAM2_Capture
        DETECTIONRESULT CAM2_Detection
        Int16 Centroid_X_CAM1
        Int16 Centroid_Y_CAM1
        CAPTURERESULT CAM1_Capture
        DETECTIONRESULT CAM1_Detection      
    	UInt8 CSS1
        UInt8 CSS2
        UInt8 CSS3
        UInt8 CSS4
        UInt8 CSS5
        UInt8 CSS6
        UInt8 CSS7
        UInt8 CSS8
        UInt8 CSS9
        UInt8 CSS10
        Int16 MagX
        Int16 MagY
        Int16 MagZ
        Int16 RateX
        Int16 RateY
        Int16 RateZ
    }

    struct TLM195_Struct
    {
        UInt8 TLM_ID
        UInt16 Cubesense1_3V3_Current
        UInt16 Cubesense1_SRAM_Current
        UInt16 Cubesense2_3V3_Current
        UInt16 Cubesense2_SRAM_Current
        UInt16 CubeControl_3V3_Current
        UInt16 CubeControl_5V_Current
        UInt16 CubeControl_Vbat_Current
        UInt16 Wheel_1_Current
        UInt16 Wheel_2_Current
        UInt16 Wheel_3_Current
        UInt16 CubeStar_Current
        UInt16 MTQ_Current
        Int16 CubeStar_MCU_Temp
        Int16 ADCS_MCU_Temp
        Int16 MTM_Temp
        Int16 RMTM_Temp
        Int16 X_Rate_Sensor_Temp
        Int16 Y_Rate_Sensor_Temp
        Int16 Z_Rate_Sensor_Temp
    }

    struct TLM196_Struct
    {
        UInt8 TLM_ID
        UInt16 ADCS_Update_Time
        UInt16 Senson_Actuator_Comm_Time
        UInt16 SGP4_Execution_Time
        UInt16 IGRF_Execution_Time
    }

    struct ADCS_Pwr_Ctrl_Struct
    {
        <** @description: Bit-field, mapping corresponds to TLM197_Byte0 **>
        UInt8 Byte0
        <** @description: Bit-field, mapping corresponds to TLM197_Byte1 **>
        UInt8 Byte1
        <** @description: Bit-field, mapping corresponds to TLM197_Byte2 **>
        UInt8 Byte2
    }

    struct TLM198_Struct
    {
        UInt8 TLM_ID
        UInt16 CubeStar_Current
        UInt16 MTQ_Current
        Int16 CubeStar_MCU_Temp
    }

    struct TLM201_Struct
    {
    	UInt8 TLM_ID
    	Int16 EstX_AngRate
    	Int16 EstY_AngRate
    	Int16 EstZ_AngRate
    }

    struct MTM_Config
    {
    	Int16 MTM_MTransf_AlphaAngle
    	Int16 MTM_MTransf_BetaAngle
    	Int16 MTM_MTransf_GammaAngle
    	Int16 MTM_Ch1_Offset
    	Int16 MTM_Ch2_Offset
    	Int16 MTM_Ch3_Offset
    	Int16 MTM_SensMatrix_S11
    	Int16 MTM_SensMatrix_S22
    	Int16 MTM_SensMatrix_S33
    	Int16 MTM_SensMatrix_S12
    	Int16 MTM_SensMatrix_S13
    	Int16 MTM_SensMatrix_S21
    	Int16 MTM_SensMatrix_S23
    	Int16 MTM_SensMatrix_S31
    	Int16 MTM_SensMatrix_S32
    }

    struct RMTM_Config
    {
    	Int16 RMTM_MTransf_AlphaAngle
    	Int16 RMTM_MTransf_BetaAngle
    	Int16 RMTM_MTransf_GammaAngle
    	Int16 RMTM_Ch1_Offset
    	Int16 RMTM_Ch2_Offset
    	Int16 RMTM_Ch3_Offset
    	Int16 RMTM_SensMatrix_S11
    	Int16 RMTM_SensMatrix_S22
    	Int16 RMTM_SensMatrix_S33
    	Int16 RMTM_SensMatrix_S12
    	Int16 RMTM_SensMatrix_S13
    	Int16 RMTM_SensMatrix_S21
    	Int16 RMTM_SensMatrix_S23
    	Int16 RMTM_SensMatrix_S31
    	Int16 RMTM_SensMatrix_S32
    }

    struct TLM206_Struct
    {
    	UInt8 MTQ1_Axis
        UInt8 MTQ2_Axis
        UInt8 MTQ3_Axis    
        UInt8 RW1_Axis
        UInt8 RW2_Axis
        UInt8 RW3_Axis
        UInt8 RW4_Axis
        UInt8 Gyro1_Axis
        UInt8 Gyro2_Axis
        UInt8 Gyro3_Axis
        Int16 Rate_Sensor_Offset_X
        Int16 Rate_Sensor_Offset_Y
        Int16 Rate_Sensor_Offset_Z
        UInt8 Rate_sensor_Mult
        <** @description: CSS_Axis - Array correspongind to CSS with AXIS_SELECT enum
            @details: size = 10  **>
    	UInt8[] CSS_Axis
        <** @description: CSS_rel_scale - Array correspongind to CSS relative scale values
            @details: size = 10  **>
    	UInt8[] CSS_rel_scale
        UInt8 CSS_threshold
        CUBESENSE_Struct Cubesense_data
        MTM_Config Config_data_MTM
        RMTM_Config Config_data_RMTM
        CUBESTAR_Struct Cubestar_data
        Float Detumbling_Sping_Gain
        Float Detumbling_Damping_Gain
        Int16 Reference_Spin_Rate
        Float Fast_Detumb_Bdot_Gain
        Float Y_Momentum_Ctrl_Gain
        Float Y_Momentum_Nutation_Damping_Gain
        Float Y_Momentum_Proprt_Gain
        Float Y_Momentum_Deriv_Gain
        Float Reference_Wheel_Momentum
        Float RWheel_Proport_Gain
        Float RWheel_Deriv_Gain
        Float Y_Wheel_Bias_Momentum
        UInt8 Sunward_Face_Auto_Ctrl_Transition
        Float Tracking_Proprt_Gain
        Float Tracking_Deriv_Gain
        Float Tracking_Integral_Gain
        UInt8 Target_Tracking_Facet
        Float MOI_xx
        Float MOI_yy
        Float MOI_zz
        Float POI_xy
        Float POI_xz
        Float POI_yz
        Float MTM_RateFilt_Sys_Noise
        Float EKF_Sys_Noise
        Float CSS_Meas_Noise
        Float SunSens_Meas_Noise
        Float NadirSens_Meas_Noise
        Float MTM_Meas_Noise
        Float StarTrack_Meas_Noise
        UInt8 Byte375
        UInt8 Byte376
        UInt8 Cam_1_2_Sample_Period
        UInt16 Incl_Coeff
        UInt16 Raan_Coeff
        UInt16 Ecc_Coeff
        UInt16 Aop_Coeff
        UInt16 Time_Coeff
        UInt16 Pos_Coeff
        UInt8 Max_Pos_Error
        UInt8 ASGP4_Filter
        Int32 xp_Coeff
        Int32 yp_Coeff
        UInt8 GPS_roll_over
        UInt8 Position_sd
        UInt8 Velocity_sd
        UInt8 Min_Satellites
        UInt8 Time_Gain
        UInt8 Max_lag
        UInt16 Min_Samples
        <** @description: Array of length 384 bits which encodes the user coded control mode settings
        @details: size = 48 **>
        UInt8[] User_Coded_Ctrl_Settings
        <** @description: Array of length 384 bits which encodes the user coded estimation settings
        @details: size = 48 **>
        UInt8[] User_Coded_Est_Mode_Settings
    }

    struct Detumbling_Struct
    {
        Float Detumbling_Sping_Gain
        Float Detumbling_Damping_Gain
        Int16 Reference_Spin_Rate
        Float Fast_Detumb_Bdot
    }

    struct Y_Ctrl_Par_Struct
    {
        Float Y_Momentum_Ctrl_Gain
        Float Y_Momentum_Nutation_Damping_Gain
        Float Y_Momentum_Proprt_Gain
        Float Y_Momentum_Deriv_Gain
        Float Reference_Wheel_Momentum
    }
    
    struct TLM210_Struct
    {
        UInt8 TLM_ID
        GPS_Solution_Status GPS_Stat
        UInt8 N_Sat_Tracked
        UInt8 N_Sat_Used
        UInt8 XYZ_Lof_Count
        UInt8 RANGE_Log_Count
        UInt8 Log_Setup_Response
        UInt16 GPS_Ref_Week
        UInt32 GPS_Time
        Int32 ECEF_X
        Int16 ECEF_V_X
        Int32 ECEF_Y
        Int16 ECEF_V_Y
        Int32 ECEF_Z
        Int16 ECEF_V_Z
        UInt8 X_Pos_StdDiv
        UInt8 Y_Pos_StdDiv
        UInt8 Z_Pos_StdDiv
        UInt8 V_X_StdDiv
        UInt8 V_Y_StdDiv
        UInt8 V_Z_StdDiv
    }

    struct TLM211_Struct
    {
        UInt8 TLM_ID
        UInt8 Num_Star_Detected
        UInt8 Star_Image_Noise
        UInt8 Num_Inv_Star_Detected
        UInt8 Num_Star_Identified
        STAR_ID_MODE Mode
        UInt8 Img_Dark_Value
        UInt8 Bools
        UInt16 Sample_Period
        UInt8 Star1_Confidence
        UInt8 Star2_Confidence
        UInt8 Star3_Confidence
        UInt16 Mag_Star1
        UInt16 Mag_Star2
        UInt16 Mag_Star3
        UInt16 Catalogue_Star1
        Int16 Centroid_X_Star1
        Int16 Centroid_Y_Star1
        UInt16 Catalogue_Star2
        Int16 Centroid_X_Star2
        Int16 Centroid_Y_Star2
        UInt16 Catalogue_Star3
        Int16 Centroid_X_Star3
        Int16 Centroid_Y_Star3
        UInt16 Capture_Time
        UInt16 Detection_Time
        UInt16 Identification_Time
        Int16 X_Rate
        Int16 Y_Rate
        Int16 Z_Rate
        Int16 Q0
        Int16 Q1
        Int16 Q2
    }       

    struct TLM212_Struct
    {
        UInt8 TLM_ID
        UInt16 Catalogue_Star1
        Int16 Centroid_X_Star1
        Int16 Centroid_Y_Star1
    }

    struct TLM213_Struct
    {
        UInt8 TLM_ID
        UInt16 Catalogue_Star2
        Int16 Centroid_X_Star2
        Int16 Centroid_Y_Star2
    }

    struct TLM214_Struct
    {
        UInt8 TLM_ID
        UInt16 Catalogue_Star3
        Int16 Centroid_X_Star3
        Int16 Centroid_Y_Star3
    }

    struct TLM215_Struct
    {
        UInt8 TLM_ID
        Int16 MagX
        Int16 MagY
        Int16 MagZ
    }

    struct TLM216_Struct
    {
		UInt8  TLM_ID
		Int16  Rate_X
		Int16  Rate_Y
		Int16  Rate_Z
    }

    struct TLM218_Struct
    {
    	UInt8  TLM_ID
    	Int16  Est_Q1
		Int16  Est_Q2
		Int16  Est_Q3
    }

    struct TLM219_Struct
    {
        UInt8 TLM_ID
        Int16 ECEF_X
        Int16 ECEF_Y
        Int16 ECEF_Z
    }

    struct TLM220_Struct
    {
        UInt8 TLM_ID
        UInt16 Time_Iter_Star
        EXECUTION_WAYPOINT Waypoint
    }

    struct Tracking_cfg_Struct
    {
        Float Tracking_Proprt_Gain
        Float Tracking_Deriv_Gain
        Float Tracking_Integral_Gain
        AXIS_SELECT Axis
    }

    struct MOI_Struct
    {
        Float MOI_xx
        Float MOI_yy
        Float MOI_zz
        Float POI_xy
        Float POI_xz
        Float POI_yz
    }
    
    struct TLM224_Struct
    {
    	UInt8	TLM_ID
    	<** @description: Bit-field, mapping corresponds to TLM224_Byte0 **>
    	UInt8	Byte0
    	<** @description: Bit-field, mapping corresponds to TLM224_Byte1 **>
    	UInt8	Byte1
    	<** @description: Bit-field, mapping corresponds to TLM224_Byte2 **>
    	UInt8	Byte2
    }

    struct ADCS_Sys_Cfg_Struct
    {
        UInt8 ACP_Type_Ctrl_Select
        UInt8 CubeControl_Signal_Version
        UInt8 CubeControl_Motor_Version
        UInt8 CubeSense1_Version
        UInt8 CubeSense2_Version
        UInt8 Cam1_2_Type
        UInt8 CubeStar_Version
        UInt8 GPS_RMTM
        Float MTQ_X_Max_Dipole
        Float MTQ_Y_Max_Dipole
        Float MTQ_Z_Max_Dipole
        Float MTQ_OnTime_Resolution
        Float MTQ_Max_On_Time
        Float RW_X_Max_Torque
        Float RW_Y_Max_Torque
        Float RW_Z_Max_Torque
        Float RW_X_Max_Momentum
        Float RW_Y_Max_Momentum
        Float RW_Z_Max_Momentum
        Float RW_X_Inertia
        Float RW_Y_Inertia
        Float RW_Z_Inertia
        Float RW_Torque_Increment
        Float Prim_MTM_X_Bias_d1
        Float Prim_MTM_Y_Bias_d1
        Float Prim_MTM_Z_Bias_d1
        Float Prim_MTM_X_Bias_d2
        Float Prim_MTM_Y_Bias_d2
        Float Prim_MTM_Z_Bias_d2
        Float Prim_MTM_X_Sens_s1
        Float Prim_MTM_Y_Sens_s1
        Float Prim_MTM_Z_Sens_s1
        Float Prim_MTM_X_Sens_s2
        Float Prim_MTM_Y_Sens_s2
        Float Prim_MTM_Z_Sens_s2
        Float Prim_RMTM_X_Bias_d1
        Float Prim_RMTM_Y_Bias_d1
        Float Prim_RMTM_Z_Bias_d1
        Float Prim_RMTM_X_Bias_d2
        Float Prim_RMTM_Y_Bias_d2
        Float Prim_RMTM_Z_Bias_d2
        Float Prim_RMTM_X_Sens_s1
        Float Prim_RMTM_Y_Sens_s1
        Float Prim_RMTM_Z_Sens_s1
        Float Prim_RMTM_X_Sens_s2
        Float Prim_RMTM_Y_Sens_s2
        Float Prim_RMTM_Z_Sens_s2
        <** @description: Bit-field, mapping corresponds to TLM225_Byte164 **>
    	UInt8	Byte164
        <** @description: Bit-field, mapping corresponds to TLM225_Byte165 **>
    	UInt8	Byte165
        <** @description: Bit-field, mapping corresponds to TLM225_Byte166 **>
    	UInt8	Byte166
        <** @description: Bit-field, mapping corresponds to TLM225_Byte167 **>
    	UInt8	Byte167
        <** @description: Bit-field, mapping corresponds to TLM225_Byte168 **>
    	UInt8	Byte168
        <** @description: Bit-field, mapping corresponds to TLM225_Byte169 **>
    	UInt8	Byte169
        <** @description: Bit-field, mapping corresponds to TLM225_Byte170 **>
    	UInt8	Byte170
        <** @description: Bit-field, mapping corresponds to TLM225_Byte171 **>
    	UInt8	Byte171
        <** @description: Bit-field, mapping corresponds to TLM225_Byte172 **>
    	UInt8	Byte172
    }

    struct User_Coded_Ctrl_Settings_Struct
    {
        <** @description: Array of length 384 bits which encodes the user coded control mode settings
        @details: size = 48 **>
        UInt8[] User_Coded_Ctrl_Settings
        <** @description: Array of length 384 bits which encodes the user coded estimation settings
        @details: size = 48 **>
        UInt8[] User_Coded_Est_Mode_Settings
    }

    struct ASGP4_Param_Struct
    {
        UInt16 Incl_Coeff
        UInt16 Raan_Coeff
        UInt16 Ecc_Coeff
        UInt16 Aop_Coeff
        UInt16 Time_Coeff
        UInt16 Pos_Coeff
        UInt8 Max_Pos_Error
        ASGP4_FILTER_MODE Mode
        Int32 xp_Coeff
        Int32 yp_Coeff
        UInt8 GPS_roll_over
        UInt8 Position_sd
        UInt8 Velocity_sd
        UInt8 Min_Satellites
        UInt8 Time_Gain
        UInt8 Max_lag
        UInt16 Min_Samples
    }

    struct TLM228_Struct
    {
        UInt8 TLM_ID
        UInt8 Byte0
        Float Epoch
        Float Inclination
        Float RAAN
        Float ECC
        Float AOP
        Float MA
        Float MM
        Float Bstar
    }


    struct TLM229_Struct
    {
        UInt8 TLM_ID
        Int16 X_Rate
        Int16 Y_Rate
        Int16 Z_Rate
    }

    struct TLM230_Struct
    {
        UInt8 TLM_ID
        Int16 Q0
        Int16 Q1
        Int16 Q2
    }

    struct TLM231_Struct
    {
        UInt8 TLM_ID
        UInt8 Bools
        UInt16 Sample_Period
        UInt8 Star1_Confidence
        UInt8 Star2_Confidence
        UInt8 Star3_Confidence
    }

    struct TLM232_Struct
    {
        UInt8 TLM_ID
        UInt16 Data_3V3_Current
        UInt16 Cam_SRAM_Current
    }


    struct TLM233_Struct
    {
    	UInt8 		  TLM_ID
    	UInt8 		  PercComplete
    	IMSAVE_STATUS Status
    }

    struct TLM234_Struct
    {
    	UInt8 		  TLM_ID
    	UInt8 		  Format_Erase_Busy
    }
    
    struct Inertial_Ref_Vec_Struct
    {
    	Int16		  Inertial_Ref_X
    	Int16		  Inertial_Ref_Y
        Int16		  Inertial_Ref_Z
    }
    
    struct TLM240_Struct
    {
    	UInt8 		  TLM_ID
    	UInt8		  Last_TC_ID
    	UInt8		  Processed_flag
        UInt8         TC_parameter_error_index
    }

    struct TLM241_Struct
    {
    	UInt8 		  TLM_ID
    	UInt16		  Packet_counter
        <** @description: File Bytes
            @details: size = 20  **>
    	UInt8[] Buffer
    }

    struct TLM242_Struct
    {
    	UInt8 	TLM_ID
    	UInt8	Ready_Param_Err
    	UInt16  CRC16
        UInt16  Block_Lenght
    }

    struct TLM243_Struct
    {
    	UInt8 	TLM_ID
    	UInt8	Byte0
    	UInt8   File_Ctr
        UInt32  File_Size
        UInt16  File_Date_Time
        UInt16  CRC16
    }

    struct TLM244_Struct
    {
    	UInt8 	TLM_ID
    	UInt8	Busy
    }

    struct TLM245_Struct
    {
    	UInt8 	TLM_ID
    	UInt8	Busy_Err
    }

    struct TLM246_Struct
    {
    	UInt8 	TLM_ID
    	UInt16	Checksum
    }
    
    struct TC26_Struct
    {
    	Int16 MTM_MTransf_AlphaAngle
    	Int16 MTM_MTransf_BetaAngle
    	Int16 MTM_MTransf_GammaAngle
    	Int16 MTM_Ch1_Offset
    	Int16 MTM_Ch2_Offset
    	Int16 MTM_Ch3_Offset
    	Int16 MTM_SensMatrix_S11
    	Int16 MTM_SensMatrix_S22
    	Int16 MTM_SensMatrix_S33
    	Int16 MTM_SensMatrix_S12
    	Int16 MTM_SensMatrix_S13
    	Int16 MTM_SensMatrix_S21
    	Int16 MTM_SensMatrix_S23
    	Int16 MTM_SensMatrix_S31
    	Int16 MTM_SensMatrix_S32
    }
    
    struct TC11_Struct
    {
    	UInt8 Byte0
    	UInt8 Byte1
    	UInt8 Byte2
    }
    
    struct TC13_Struct
    {
    	CONTROL_Mode ControlMode
    	UInt16			  Timeout
    }

    struct TC38_Struct
    {
        Float Detumbling_Sping_Gain
        Float Detumbling_Damping_Gain
        Int16 Reference_Spin_Rate
        Float Fast_Detumb_Bdot
    }

    struct TC39_Struct
    {
        Float Y_Momentum_Ctrl_Gain
        Float Y_Momentum_Nutation_Damping_Gain
        Float Y_Momentum_Proprt_Gain
        Float Y_Momentum_Deriv_Gain
        Float Reference_Wheel_Momentum
    }

    struct TC80_Struct
    {
    	CAM_SELECT CamSelect
    	IMG_SIZE   ImgSize
    }
    
    <** @description: TLM128 - Identification
        @details: id = 128 
    **>
    method TLM_128
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM128_Struct responseData 
        }
    }

    <** @description: TLM129 - Boot and Running Program Status
        @details: id = 129 
    **>
    method TLM_129
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM129_Struct responseData 
        }
    }

    <** @description: TLM130 - Boot Index and Status
        @details: id = 130 
    **>
    method TLM_130
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM130_Struct responseData 
        }
    }
    
    <** @description: TLM131 - Cache enabled state
        @details: id = 131 
    **>
    method TLM_131
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM131_Struct responseData 
        }
    }

    <** @description: TLM132 - Current ADCS State Telemetry
        @details: id = 132 
    **>
    method TLM_132_APP
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM132_APP_Struct responseData 
        }
    }

    <** @description: TLM133 - SRAM Scrub Parameters
        @details: id = 133 
    **>
    method TLM_133
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM133_Struct responseData 
        }
    }

    <** @description: TLM134 - SRAM Scrub Parameters
        @details: id = 134 
    **>
    method TLM_134_APP
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM134_APP_Struct responseData 
        }
    }

    <** @description: TLM135 - CubeACP State
        @details: id = 135 
    **>
    method TLM_135
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	TLM135_Struct responseData 
        }
    }

    <** @description: TLM136 - Get Magnetorquer Configuration Parameters
        @details: id = 136 
    **>
    method TLM_136
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            MTQ_CFG_Struct responseData 
        }
    }

    <** @description: TLM137 - Get Wheel Configuration Parameters
        @details: id = 137 
    **>
    method TLM_137
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            WHEEL_CFG_Struct responseData 
        }
    }

    <** @description: TLM138 - Get Rate Gyro Configuration Parameters
        @details: id = 138 
    **>
    method TLM_138
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            RATE_GYRO_CFG_Struct responseData 
        }
    }

    <** @description: TLM139 - Get CSS Configuration Parameters
        @details: id = 139 
    **>
    method TLM_139
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            CSS_CFG responseData 
        }
    }

    <** @description: TLM140 - Get Current UNIX Time
        @details: id = 140 
    **>
    method TLM_140
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            UNIXTime_Struct responseData 
        }
    }

    <** @description: TLM141 - Last Logged Event
        @details: id = 141 
    **>
    method TLM_141
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM141_Struct responseData 
        }
    }

    <** @description: TLM142 - SRAM Latchup counters
        @details: id = 142 
    **>
    method TLM_142
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM142_Struct responseData 
        }
    }

    <** @description: TLM143 - EDAC Error Counters
        @details: id = 143
    **>
    method TLM_143
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM143_Struct responseData 
        }
    }

    <** @description: TLM144 - Communication Status
        @details: id = 144
    **>
    method TLM_144
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM144_Struct responseData 
        }
    }

    <** @description: TLM145 - Change Unix Time Save to Flash Configuration
        @details: id = 145 
    **>
    method TLM_145
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            UNIXTime_SaveCfg_Struct responseData 
        }
    }
    
    <** @description: TLM146 - Estimated Attitude Angles
        @details: id = 146 
    **>
    method TLM_146
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM146_Struct responseData 
        }
    }

    <** @description: TLM147 - Estimated angular rates relative to orbit reference frame
        @details: id = 147 
    **>
    method TLM_147
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM147_Struct responseData 
        }
    }

    <** @description: TLM148 - Satellite Position (ECI)
        @details: id = 148 
    **>
    method TLM_148
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM148_Struct responseData 
        }
    }

    <** @description: TLM149 - Satellite Velocity (ECI)
        @details: id = 149 
    **>
    method TLM_149
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM149_Struct responseData 
        }
    }

    <** @description: TLM150 - Satellite Position in WGS-84 Coordinate Frame (LLH)
        @details: id = 150 
    **>
    method TLM_150
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM150_Struct responseData 
        }
    }
    
    <** @description: TLM151 - Magnetic Field Vector
        @details: id = 151 
    **>
    method TLM_151
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM151_Struct responseData 
        }
    }
    
    <** @description: TLM152 - Coarse Sun Vector
        @details: id = 152 
    **>
    method TLM_152
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM152_Struct responseData 
        }
    }

    <** @description: TLM153 - Fine Sun Vector
        @details: id = 153 
    **>
    method TLM_153
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM153_Struct responseData 
        }
    }
    
    <** @description: TLM154 - Nadir Vector
        @details: id = 154 
    **>
    method TLM_154
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM154_Struct responseData 
        }
    }
    
    <** @description: TLM155 - Get Rate Sensor Rates
        @details: id = 155 
    **>
    method TLM_155
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM155_Struct responseData 
        }
    }
    
    <** @description: TLM156 - Measured Wheel Speed
        @details: id = 156 
    **>
    method TLM_156
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM156_Struct responseData 
        }
    }
    
    <** @description: TLM157 - Magnetorquer Commands
        @details: id = 157 
    **>
    method TLM_157
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM157_Struct responseData 
        }
    }
    
    <** @description: TLM158 - Wheel Speed Commands
        @details: id = 158 
    **>
    method TLM_158
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM158_Struct responseData 
        }
    }
    
    <** @description: TLM159 - IGRF Modelled Magnetic Field Vector
        @details: id = 159 
    **>
    method TLM_159
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM159_Struct responseData 
        }
    }
    
    <** @description: TLM160 - Modelled Sun Vector
        @details: id = 160 
    **>
    method TLM_160
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM160_Struct responseData 
        }
    }

    <** @description: TLM161 - Get Estimated Gyro Bias
        @details: id = 161 
    **>
    method TLM_161
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM161_Struct responseData 
        }
    }
    
    <** @description: TLM162 - Get Estimated Innovation Vector
        @details: id = 162 
    **>
    method TLM_162
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM162_Struct responseData 
        }
    }
    
    <** @description: TLM163 - Get Quaternion Error Vector
        @details: id = 163 
    **>
    method TLM_163
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM163_Struct responseData 
        }
    }

    <** @description: TLM164 - Get Quaternion Covariance
        @details: id = 164 
    **>
    method TLM_164
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM164_Struct responseData 
        }
    }

    <** @description: TLM165 - Get Angualr Rate Covariance
        @details: id = 165 
    **>
    method TLM_165
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM165_Struct responseData 
        }
    }

    <** @description: TLM166 - Raw Cam2 Sensor
        @details: id = 166 
    **>
    method TLM_166
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM166_Struct responseData 
        }
    }

    <** @description: TLM167 - Raw Cam1 Sensor
        @details: id = 167 
    **>
    method TLM_167
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM167_Struct responseData 
        }
    }

    <** @description: TLM168 - Get CSS Measurements 1 to 6
        @details: id = 168 
    **>
    method TLM_168
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM168_Struct responseData 
        }
    }

    <** @description: TLM169 -  Get CSS Measurements 7 to 10
        @details: id = 169 
    **>
    method TLM_169
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM169_Struct responseData 
        }
    }

    <** @description: TLM170 - Get Raw Magnetometer Measurements
        @details: id = 170 
    **>
    method TLM_170
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM170_Struct responseData 
        }
    }
    
    <** @description: TLM171 - Get CubeSense1 Current Measurement
        @details: id = 171 
    **>
    method TLM_171
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM171_Struct responseData 
        }
    }

    <** @description: TLM172 - Get CubeControl Current Measurements
        @details: id = 172 
    **>
    method TLM_172
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM172_Struct responseData 
        }
    }

    <** @description: TLM173 - Get Wheel Currents
        @details: id = 173 
    **>
    method TLM_173
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM173_Struct responseData 
        }
    }

    <** @description: TLM174 - ADCS Temperatures
        @details: id = 174 
    **>
    method TLM_174
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM174_Struct responseData 
        }
    }

    <** @description: TLM175 - Rate Sensor Temperatures
        @details: id = 175 
    **>
    method TLM_175
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM175_Struct responseData 
        }
    }

    <** @description: TLM176 - Raw GPS Status Telemetry
        @details: id = 176 
    **>
    method TLM_176
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM176_Struct responseData 
        }
    }

    <** @description: TLM177 - Raw GPS Time Telemetry
        @details: id = 177 
    **>
    method TLM_177
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM177_Struct responseData 
        }
    }

    <** @description: TLM178 - Raw GPS X Telemetry
        @details: id = 178 
    **>
    method TLM_178
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM178_Struct responseData 
        }
    }

    <** @description: TLM179 - Raw GPS Y Telemetry
        @details: id = 179 
    **>
    method TLM_179
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM179_Struct responseData 
        }
    }

    <** @description: TLM180 - Raw GPS Z Telemetry
        @details: id = 180
    **>
    method TLM_180
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM180_Struct responseData 
        }
    }

   <** @description: TLM181 - Star 1 Body Vector Telemetry
        @details: id = 181
    **>
    method TLM_181
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM181_Struct responseData 
        }
    }   

    <** @description: TLM182 - Star 2 Body Vector Telemetry
        @details: id = 182
    **>
    method TLM_182
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM182_Struct responseData 
        }
    }   

    <** @description: TLM183 - Star 3 Body Vector Telemetry
        @details: id = 183
    **>
    method TLM_183
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM183_Struct responseData 
        }
    }   

    <** @description: TLM184 - Star 1 Orbit Vector Telemetry
        @details: id = 184
    **>
    method TLM_184
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM184_Struct responseData 
        }
    }

    <** @description: TLM185 - Star 2 Orbit Vector Telemetry
        @details: id = 185
    **>
    method TLM_185
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM185_Struct responseData 
        }
    }

    <** @description: TLM186 - Star 3 Orbit Vector Telemetry
        @details: id = 186
    **>
    method TLM_186
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM186_Struct responseData 
        }
    }

    <** @description: TLM187 - Instrument Magnitude Of Identified Stars
        @details: id = 187
    **>
    method TLM_187
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM187_Struct responseData 
        }
    }

    <** @description: TLM188 - Performance parameters of star measurement
        @details: id = 188
    **>
    method TLM_188
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM188_Struct responseData 
        }
    }

    <** @description: TLM189 - Timing information of star measurement
        @details: id = 189
    **>
    method TLM_189
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM189_Struct responseData 
        }
    }

    <** @description: TLM190 - ADCS State
        @details: id = 190
    **>
    method TLM_190
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM190_Struct responseData 
        }
    }

    <** @description: TLM191 - ADCS Measurements
        @details: id = 191
    **>
    method TLM_191
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM191_Struct responseData 
        }
    }

    <** @description: TLM192 - Actuator Commands
        @details: id = 192
    **>
    method TLM_192
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM192_Struct responseData 
        }
    }

    <** @description: TLM193 - Estimation Data
        @details: id = 193
    **>
    method TLM_193
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM193_Struct responseData 
        }
    }

    <** @description: TLM194 - Raw sensor measurements
        @details: id = 194
    **>
    method TLM_194
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM194_Struct responseData 
        }
    }

    <** @description: TLM195 - Power and Temperature Measurements
        @details: id = 195
    **>
    method TLM_195
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM195_Struct responseData 
        }
    }


    <** @description: TLM196 - Adcs Execution Times
        @details: id = 196
    **>
    method TLM_196
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM196_Struct responseData 
        }
    }

    <** @description: TLM197 - Get ADCS Power Control
        @details: id = 197 
    **>
    method TLM_197
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 respCmdID
            ADCS_Pwr_Ctrl_Struct responseData
        }
    }

    <** @description: TLM198 - Get Misc Current Measurements
        @details: id = 198 
    **>
    method TLM_198
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM198_Struct responseData
        }
    }
    
    <** @description: TLM199 - Get Commanded Attitude Angles
        @details: id = 199 
    **>
    method TLM_199
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            COMMANDED_ATTITUDE_Angles_Struct responseData 
        }
    }
    
    <** @description: TLM200 - Get Target Reference for Tracking Control Mode
        @details: id = 200 
    **>
    method TLM_200
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            TARGET_REF_Struct responseData 
        }
    }

    <** @description: TLM201 - Get Fine Estimated Angular Rates
        @details: id = 201 
    **>
    method TLM_201
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM201_Struct responseData 
        }
    }
    
    <** @description: TLM202 - Get CubeStar Configuration Parameters
        @details: id = 202 
    **>
    method TLM_202
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 		 	 RespCmdID
            CUBESTAR_Struct responseData 
        }
    }
    
    <** @description: TLM203 - Get CubeSense Configuration Parameters
        @details: id = 203 
    **>
    method TLM_203
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 		 	 RespCmdID
            CUBESENSE_Struct responseData 
        }
    }
    
    <** @description: TLM204 - Get Magnetometer Configuration
        @details: id = 204 
    **>
    method TLM_204
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            MTM_Config responseData 
        }
    }

    <** @description: TLM205 - Get Redundant Magnetometer Configuration
        @details: id = 205 
    **>
    method TLM_205
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            RMTM_Config responseData 
        }
    }   

    <** @description: TLM206 - Get Current configuration
        @details: id = 206
    **>
    method TLM_206
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 RespCmdID
            TLM206_Struct responseData
        }
    }

    <** @description: TLM207 - Get SGP4 Orbit Parameters
        @details: id = 207 
    **>
    method TLM_207
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 		 		  RespCmdID
            SGP4_OrbParams_Struct responseData 
        }
    }
    
    <** @description: TLM208 - Get controller gains and reference values for Detumbling control mode
        @details: id = 208 
    **>
    method TLM_208
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Detumbling_Struct responseData 
        }
    }

    <** @description: TLM209 - Get controller gains and reference values for Detumbling control mode
        @details: id = 209 
    **>
    method TLM_209
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Y_Ctrl_Par_Struct responseData 
        }
    }

    <** @description: TLM210 - Get Raw GPS Measurements Telemetry
        @details: id = 210 
    **>
    method TLM_210
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM210_Struct responseData 
        }
    }

    <** @description: TLM211 - Get Raw Star Tracker Measurement
        @details: id = 211 
    **>
    method TLM_211
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM211_Struct responseData 
        }
    }

    <** @description: TLM212 - Catalogue index and detected coordinates for star 1
        @details: id = 212 
    **>
    method TLM_212
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM212_Struct responseData 
        }
    }

    <** @description: TLM213 - Catalogue index and detected coordinates for star 2
        @details: id = 213 
    **>
    method TLM_213
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM213_Struct responseData 
        }
    }

    <** @description: TLM214 - Catalogue index and detected coordinates for star 3
        @details: id = 214 
    **>
    method TLM_214
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM214_Struct responseData 
        }
    }

    <** @description: TLM215 - Secondary Magnetometer raw measurements
        @details: id = 215 
    **>
    method TLM_215
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM215_Struct responseData 
        }
    }

    <** @description: TLM216 - Raw Rate Sensor measurements
        @details: id = 216 
    **>
    method TLM_216
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM216_Struct responseData 
        }
    }

    <** @description: TLM217 - Get Controller Gains and Reference Value for Reaction Wheel Control Mode
        @details: id = 217 
    **>
    method TLM_217
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 		 		RespCmdID
            RWHEELS_CFG_Struct  responseData 
        }
    }

    <** @description: TLM218 - Rstimated Quaternion Telemetry
        @details: id = 218 
    **>
    method TLM_218
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM218_Struct responseData 
        }
    }
    
    <** @description: TLM219 - Satellite position in ECEF coordinates
        @details: id = 219 
    **>
    method TLM_219
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM219_Struct responseData 
        }
    }
    
    <** @description: TLM220 - Returns information about the ACP loop
        @details: id = 220 
    **>
    method TLM_220
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM220_Struct responseData 
        }
    }

    <** @description: TLM221 - Get Tracking Controller Gain Parameters
        @details: id = 221 
    **>
    method TLM_221
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Tracking_cfg_Struct responseData 
        }
    }

    <** @description: TLM222 - Get Moment of Inertia Matrix
        @details: id = 222 
    **>
    method TLM_222
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            MOI_Struct responseData 
        }
    }

    <** @description: TLM223 - Get Estimation Noise Covariance and Sensor Mask
        @details: id = 223 
    **>
    method TLM_223
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            EST_PARAMS_Struct responseData 
        }
    }
    
    <** @description: TLM224 - Current ADCS State 2 Telemetry
        @details: id = 224 
    **>
    method TLM_224
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM224_Struct responseData 
        }
    }
    
    <** @description: TLM225 - Get ADCS System Configuration
        @details: id = 225 
    **>
    method TLM_225
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            ADCS_Sys_Cfg_Struct responseData 
        }
    }

    <** @description: TLM226 - Get User-coded Controller and Estimator Parameters
        @details: id = 226 
    **>
    method TLM_226
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            User_Coded_Ctrl_Settings_Struct responseData 
        }
    }

    <** @description: TLM227 - Get Settings for GPS augmented SGP4
        @details: id = 227 
    **>
    method TLM_227
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            ASGP4_Param_Struct responseData 
        }
    }

    <** @description: TLM228 - Generated ASGP4 TLEs
        @details: id = 228 
    **>
    method TLM_228
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM228_Struct responseData 
        }
    }

    <** @description: TLM229 - CubeStar Estimated Rates
        @details: id = 229 
    **>
    method TLM_229
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM229_Struct responseData 
        }
    }

    <** @description: TLM230 - CubeStar Estimated Quaternions
        @details: id = 230 
    **>
    method TLM_230
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM230_Struct responseData 
        }
    }

    <** @description: TLM231 - CubeStar Performance
        @details: id = 231 
    **>
    method TLM_231
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM231_Struct responseData 
        }
    }

    <** @description: TLM232 - Get CAM2 Currents
        @details: id = 232
    **>
    method TLM_232
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM232_Struct responseData 
        }
    }

    <** @description: TLM233 - Get Status of Image Capture and Save Operation
        @details: id = 233 
    **>
    method TLM_233
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM233_Struct responseData 
        }
    }
  
    <** @description: TLM234 - Get Format/Erace Starus
        @details: id = 234 
    **>
    method TLM_234
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM234_Struct responseData 
        }
    }
    <** @description: TLM235 - Get SD Log1 configuration
        @details: id = 235 
    **>
    method TLM_235
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {	
        	UInt8 		 RespCmdID
            SDLog_Struct responseData 
        }
    }
    
    <** @description: TLM236 - Get SD Log2 configuration
        @details: id = 236 
    **>
    method TLM_236
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 		 RespCmdID
            SDLog_Struct responseData 
        }
    }
        
    <** @description: TLM237 - Get UART Log Configuration
        @details: id = 237 
    **>
    method TLM_237
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
        	UInt8 		 RespCmdID
            UART_log_cfg responseData 
        }
    }

    <** @description: TLM238 - Get Inertial Reference Vector
        @details: id = 238 
    **>
    method TLM_238
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Inertial_Ref_Vec_Struct responseData 
        }
    }

    <** @description: TLM240 - Telemetry frame with acknowledge status of the previously sent command
        @details: id = 240 
    **>
    method TLM_240
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM240_Struct responseData 
        }
    }

    <** @description: TLM241 - Get File Download Buffer
        @details: id = 241 
    **>
    method TLM_241
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM241_Struct responseData 
        }
    }

    <** @description: TLM242 - Get Download Status
        @details: id = 242 
    **>
    method TLM_242
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM242_Struct responseData 
        }
    }

    <** @description: TLM243 - Get File Info
        @details: id = 243 
    **>
    method TLM_243
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM243_Struct responseData 
        }
    }

    <** @description: TLM244 - Get Initialize Upload Complete
        @details: id = 244 
    **>
    method TLM_244
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM244_Struct responseData 
        }
    }

    <** @description: TLM245 - Get Finalize Upload Block Complete
        @details: id = 245
    **>
    method TLM_245
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM245_Struct responseData 
        }
    }

    <** @description: TLM246 - Get Block Checksum
        @details: id = 246
    **>
    method TLM_246
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TLM246_Struct responseData 
        }
    }

    <** @description: TLM247 - Get File Hole Map 1
        @details: id = 247
    **>
    method TLM_247
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Hole_Map_Struct responseData 
        }
    }

    
    <** @description: TLM248 - Get File Hole Map 2
        @details: id = 248
    **>
    method TLM_248
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Hole_Map_Struct responseData 
        }
    }
  
    <** @description: TLM249 - Get File Hole Map 3
        @details: id = 249
    **>
    method TLM_249
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Hole_Map_Struct responseData 
        }
    }

    <** @description: TLM250 - Get File Hole Map 4
        @details: id = 250
    **>
    method TLM_250
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Hole_Map_Struct responseData 
        }
    }

    <** @description: TLM251 - Get File Hole Map 5
        @details: id = 251
    **>
    method TLM_251
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Hole_Map_Struct responseData 
        }
    }

    <** @description: TLM252 - Get File Hole Map 6
        @details: id = 252
    **>
    method TLM_252
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Hole_Map_Struct responseData 
        }
    }   


    <** @description: TLM253 - Get File Hole Map 7
        @details: id = 253
    **>
    method TLM_253
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Hole_Map_Struct responseData 
        }
    }


    <** @description: TLM254 - Get File Hole Map 8
        @details: id = 254
    **>
    method TLM_254
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            UInt8 TLM_ID
            Hole_Map_Struct responseData 
        }
    }

    <** @description: TC1 - Set Reset
        @details: id = 1 
    **>
    method TC_1
    {
    	in
    	{
    		UInt8 CmdID
			UInt8 Magic_Number
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC2 - Set Current UNIX Time
        @details: id = 2 
    **>
    method TC_2
    {
    	in
    	{
    		UInt8 CmdID
			UNIXTime_Struct Time
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC3 - Set Cache Enabled Sate
        @details: id = 3 
    **>
    method TC_3
    {
    	in
    	{
    		UInt8 CmdID
			UInt8 Enabled_State
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC4 - Reset Log Pointer
        @details: id = 4
    **>
    method TC_4
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC5 - Advance Log Pointer
        @details: id = 5
    **>
    method TC_5
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC6 - Reset boot registers
        @details: id = 6
    **>
    method TC_6
    {
        in
        {
            UInt8 CmdID
        }
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC7 - Deploy Magnetometer Boom
        @details: id = 7 
    **>
    method TC_7
    {
    	in
    	{
    		UInt8 CmdID
    		UInt8 Timeout
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
        
    <** @description: TC8 - Set SRAM Scrub Parameters
        @details: id = 8 
    **>
    method TC_8
    {
    	in
    	{
    		UInt8 CmdID
    		UInt16 Scrub_Size
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC9 - Set Unix Time Save to Flash Configuration
        @details: id = 9 
    **>
    method TC_9
    {
    	in
    	{
    		UInt8 CmdID
    		UNIXTime_SaveCfg_Struct Cfg
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC10 - Set ADCS Run Mode
        @details: id = 10 
    **>
    method TC_10
    {
    	in
    	{
    		UInt8 CmdID
    		ADCS_RUN_Mode State
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC11 - ADCS Power Control
        @details: id = 11 
    **>
    method TC_11
    {
    	in
    	{
    		UInt8 CmdID
    		TC11_Struct PwrCntrl
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

        
    <** @description: TC12 - Clear Latched Errors
        @details: id = 12 
    **>
    method TC_12
    {
    	in
    	{
    		UInt8 CmdID
    		UInt8 Latched_errs
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC13 - Set Attitude Control Mode
        @details: id = 13 
    **>
    method TC_13
    {
    	in
    	{
    		UInt8 CmdID
    		TC13_Struct Control
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC14 - Set Attitude Estimation Mode
        @details: id = 14 
    **>
    method TC_14
    {
    	in
    	{
    		UInt8 CmdID
    		ESTIMATION_Mode Estimation
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC15 - Set Commanded attitude angles
        @details: id = 15 
    **>
    method TC_15
    {
    	in
    	{
    		UInt8 CmdID
    		COMMANDED_ATTITUDE_Angles_Struct Estimation
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
        <** @description: TC16 - Set Magnetorquer Output
        @details: id = 16 
    **>
    method TC_16
    {
    	in
    	{
    		UInt8 CmdID
    		Int16 X_DutyCycle
    		Int16 Y_DutyCycle
    		Int16 Z_DutyCycle
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC17 - Set Wheel Speed
        @details: id = 17 
    **>
    method TC_17
    {
    	in
    	{
    		UInt8 CmdID
    		Int16 X_Speed
    		Int16 Y_Speed
    		Int16 Z_Speed
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC18 - Trigger ADCS Loop
        @details: id = 18 
    **>
    method TC_18
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC19 - Trigger ADCS Loop With Simulated Sensor Data
        @details: id = 19
    **>
    method TC_19
    {
    	in
    	{
    		UInt8 CmdID
            ADCS_sim_data Data
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC20 - Set Current Configuration
        @details: id = 20 
    **>
    method TC_20
    {
    	in
    	{
    		UInt8 CmdID
            TLM206_Struct Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC21 - Set Magnetorquer Configuration Parameters
        @details: id = 21 
    **>
    method TC_21
    {
    	in
    	{
    		UInt8 CmdID
    		MTQ_CFG_Struct MTQConfigs
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
      
    <** @description: TC22 - Set Wheel Configuration Parameters
        @details: id = 22
    **>
    method TC_22
    {
    	in
    	{
    		UInt8 CmdID
    		WHEEL_CFG_Struct MTQConfigs
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }  


    <** @description: TC23 - Set Rate Gyro Configuration Parameters
        @details: id = 23 
    **>
    method TC_23
    {
    	in
    	{
    		UInt8 CmdID
    		RATE_GYRO_CFG_Struct Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC24 - Set CSS Configuration
        @details: id = 24 
    **>
    method TC_24
    {
    	in
    	{
    		UInt8 CmdID
    		CSS_CFG Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    
    <** @description: TC25 - Set CubeSense Configuration Parameters
        @details: id = 25 
    **>
    method TC_25
    {
    	in
    	{
    		UInt8 CmdID
    		CUBESENSE_Struct Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC26 - Set Magnetometer Configuration
        @details: id = 26 
    **>
    method TC_26
    {
    	in
    	{
    		UInt8 CmdID
    		TC26_Struct Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC27 - Set Estimation Noise Covariane and Sensor Mask
        @details: id = 27 
    **>
    method TC_27
    {
    	in
    	{
    		UInt8 CmdID
    		EST_PARAMS_Struct Params
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
         
    <** @description: TC28 - Set Augmented-SGP4 Parameters
        @details: id = 28 
    **>
    method TC_28
    {
    	in
    	{
    		UInt8 CmdID
    		ASGP4_Param_Struct Params
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC29 - Set User-coded Controller and Estimator Parameters
        @details: id = 29
    **>
    method TC_29
    {
    	in
    	{
    		UInt8 CmdID
    		User_Coded_Ctrl_Settings_Struct Settings
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC30 - Set ADCS System Configuration
        @details: id = 30 
    **>
    method TC_30
    {
    	in
    	{
    		UInt8 CmdID
    		ADCS_Sys_Cfg_Struct Cfg
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC31 - Set ASGP4 Run Mode
        @details: id = 31
    **>
    method TC_31
    {
    	in
    	{
    		UInt8 CmdID
    		ASGP4_RUN_MODE Mode
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC32 - Trigger ASGP4
        @details: id = 32
    **>
    method TC_32
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC33 - Format SD card
        @details: id = 33
    **>
    method TC_33
    {
    	in
    	{
    		UInt8 CmdID
    		UInt8 magicNumber
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC34 - Set Internal Pointing Ref Vector
        @details: id = 34
    **>
    method TC_34
    {
    	in
    	{
    		UInt8 CmdID
    		Inertial_Ref_Vec_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }  

    <** @description: TC36 - Set RMTM Configuration
        @details: id = 36
    **>
    method TC_36
    {
    	in
    	{
    		UInt8 CmdID
    		RMTM_Config Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    } 
    
    <** @description: TC37 - Set CubeStar Configuration Parameters
        @details: id = 37 
    **>
    method TC_37
    {
    	in
    	{
    		UInt8 CmdID
    		CUBESTAR_Struct Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC38 - Set controller gains and reference values for Detumbling control mode
        @details: id = 38 
    **>
    method TC_38
    {
    	in
    	{
    		UInt8 CmdID
    		TC38_Struct Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC39 - Set controller gains and reference value for Y-wheel control mode
        @details: id = 39 
    **>
    method TC_39
    {
    	in
    	{
    		UInt8 CmdID
    		TC39_Struct Config
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }  

    <** @description: TC40 - Set Controller Gains and Reference Value for Reaction Wheel Control Mode
        @details: id = 40 
    **>
    method TC_40
    {
    	in
    	{
    		UInt8 CmdID
    		RWHEELS_CFG_Struct CmdPayload
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
        
    <** @description: TC41 - Set Moment of Inertia
        @details: id = 41 
    **>
    method TC_41
    {
    	in
    	{
    		UInt8 CmdID
    		MOI_Struct MOI
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC45 - Set SGP4 Orbit Parameters
        @details: id = 45 
    **>
    method TC_45
    {
    	in
    	{
    		UInt8 CmdID
    		SGP4_OrbParams_Struct OrbitParams
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
        
    <** @description: TC54 - Set Tracking Controller Gain Parameters
        @details: id = 54 
    **>
    method TC_54
    {
    	in
    	{
    		UInt8 CmdID
    		Tracking_cfg_Struct Cfg
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC55 - Set Target Reference For Tracking Control Mode
        @details: id = 55 
    **>
    method TC_55
    {
    	in
    	{
    		UInt8 CmdID
    		TARGET_REF_Struct CmdPayload
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC56 - Use of main or redundant magnetometer
        @details: id = 56 
    **>
    method TC_56
    {
    	in
    	{
    		UInt8 CmdID
    		MTM_MODE Mode
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
        
    <** @description: TC57 - Convert to JPG File
        @details: id = 57 
    **>
    method TC_57
    {
    	in
    	{
    		UInt8 CmdID
    		Conv_to_JPG_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC63 - Save Current Configuration to Flash Memory
        @details: id = 63 
    **>
    method TC_63
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC64 - Save Orbit Parameters
        @details: id = 64 
    **>
    method TC_64
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC80 - Capture and Save image from CubeSense1,2 or CubeStar
        @details: id = 80 
    **>
    method TC_80
    {
    	in
    	{
    		UInt8 			CmdID
    		TC80_Struct		ImgCaptCfg
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC100_BOOT - Set Boot Index
        @details: id = 100 
    **>
    method TC_100
    {
    	in
    	{
    		UInt8 CmdID
    		BootSetProg_List ProgIndx
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC101_BOOT - Run Selected Program
        @details: id = 101 
    **>
    method TC_101
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC104 - Set SD Log1 Configuration
        @details: id = 104 
    **>
    method TC_104
    {
    	in
    	{
    		UInt8 CmdID
    		SDLog_Struct LogConfig
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC105 - Set SD Log2 Configuration
        @details: id = 105 
    **>
    method TC_105
    {
    	in
    	{
    		UInt8 CmdID
    		SDLog_Struct LogConfig
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
        
    <** @description: TC106 - Set UART Log Configuration
        @details: id = 106 
    **>
    method TC_106
    {
    	in
    	{
    		UInt8 CmdID
    		UART_log_cfg LogConfig
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC108 - Erase File
    @details: id = 108 
    **>
    method TC_108
    {
    	in
    	{
    		UInt8 CmdID
    		Erase_File_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC112 - Fill Download Buffer With FIle Contents
    @details: id = 112
    **>
    method TC_112
    {
    	in
    	{
    		UInt8 CmdID
    		File_Dwnd_Buffer_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
        
    <** @description: TC113 - Advance File Lis Read Pointer
    @details: id = 113
    **>
    method TC_113
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
            
    <** @description: TC114 - Initiate File Upload
    @details: id = 114
    **>
    method TC_114
    {
    	in
    	{
    		UInt8 CmdID
            File_Upload_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
            
    <** @description: TC115 - File Upload Packet
    @details: id = 115
    **>
    method TC_115
    {
    	in
    	{
    		UInt8 CmdID
            File_Upload_Packet_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
            
    <** @description: TC116 - Finalize Upload Block
    @details: id = 116
    **>
    method TC_116
    {
    	in
    	{
    		UInt8 CmdID
            Finalize_Upload_Block_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
                
    <** @description: TC117 - Reset Upload BLock
    @details: id = 117
    **>
    method TC_117
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
                    
    <** @description: TC118 - Reset File List Read Pointer
    @details: id = 118
    **>
    method TC_118
    {
    	in
    	{
    		UInt8 CmdID
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
                    
    <** @description: TC119 - Initiate Download Burst
    @details: id = 119
    **>
    method TC_119
    {
    	in
    	{
    		UInt8 CmdID
            Download_Burst_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

    <** @description: TC120 - Hole Map 1
    @details: id = 120
    **>
    method TC_120
    {
    	in
    	{
    		UInt8 CmdID
            Hole_Map_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC121 - Hole Map 2
    @details: id = 121
    **>
    method TC_121
    {
    	in
    	{
    		UInt8 CmdID
            Hole_Map_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC122 - Hole Map 3
    @details: id = 122
    **>
    method TC_122
    {
    	in
    	{
    		UInt8 CmdID
            Hole_Map_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC123 - Hole Map 4
    @details: id = 123
    **>
    method TC_123
    {
    	in
    	{
    		UInt8 CmdID
            Hole_Map_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC124 - Hole Map 5
    @details: id = 124
    **>
    method TC_124
    {
    	in
    	{
    		UInt8 CmdID
            Hole_Map_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC125 - Hole Map 6
    @details: id = 125
    **>
    method TC_125
    {
    	in
    	{
    		UInt8 CmdID
            Hole_Map_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC126 - Hole Map 7
    @details: id = 126
    **>
    method TC_126
    {
    	in
    	{
    		UInt8 CmdID
            Hole_Map_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }
    
    <** @description: TC127 - Hole Map 8
    @details: id = 127
    **>
    method TC_127
    {
    	in
    	{
    		UInt8 CmdID
            Hole_Map_Struct cmdData
    	}
        out
        {
            TCRply_Struct responseData 
        }
    }

}
