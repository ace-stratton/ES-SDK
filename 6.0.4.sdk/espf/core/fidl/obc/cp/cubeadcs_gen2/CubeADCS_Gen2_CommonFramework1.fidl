// WARNING!!! THIS IS A GENERATED FILE! DO NOT MODIFY CONTENTS MANUALLY!!!

package endurosat.macif


<** @description: Interface for Cube ADCS Gen2 - CommonFramework1
    @details: id = 300
**>

interface CubeADCS_Gen2_CommonFramework1
{
    version {major 1 minor 0}
    
    <** @description: This enumeration holds the IDs of CubeADCS Gen2 nodes for which this interface is applicable **>
    enumeration CmdTargetNode
    {
        NodeInvalid = 0
        NodeComputer = 1
        NodeStr0 = 2
        NodeStr1 = 3
        NodeFss0 = 4
        NodeFss1 = 5
        NodeFss2 = 6
        NodeFss3 = 7
        NodeHss0 = 8
        NodeHss1 = 9
        NodeMag0 = 10
        NodeMag1 = 11
        NodeRwl0 = 14
        NodeRwl1 = 15
        NodeRwl2 = 16
        NodeRwl3 = 17
        NodeRwl4 = 18
        
    }
    
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_ErrorLogSearch
    {
        
        <** @description: ReferenceHead **>
        ReferenceHead = 0
        
        <** @description: ReferenceTail **>
        ReferenceTail = 1
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_ActiveState
    {
        
        <** @description: Logging is disabled **>
        Disabled = 0
        
        <** @description: Logging is enabled **>
        Enabled = 1
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_BufferFullAction
    {
        
        <** @description: Ignore new entries when buffer is full **>
        Ignore = 0
        
        <** @description: Erase log and add new entry when buffer is full **>
        Erase = 1
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_ResetVal
    {
        
        <** @description: Dummy Value **>
        DoNothing = 0
        
        <** @description: Performs a list of final() operations before resetting **>
        Soft = 55
        
        <** @description: Performs reset immediately **>
        Hard = 66
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_ConfigPersistState
    {
        
        <** @description: Config Persist task is IDLE **>
        ConfigPersistIdle = 0
        
        <** @description: Config Persist task is BUSY **>
        ConfigPersistBusy = 1
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_ConfigPersistResult
    {
        
        <** @description: No result yet for config persist **>
        ConfigPersistNone = 0
        
        <** @description: Config Persist SUCCESSFUL **>
        ConfigPersistSuccess = 1
        
        <** @description: Config Persist failed due to a parameter mutex timeout **>
        ConfigPersistErrorParamLock = 2
        
        <** @description: Config Persist failed due to faillure during flash operations **>
        ConfigPersistErrorFlash = 3
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_GitBranch
    {
        
        <** @description: master branch **>
        Master = 0
        
        <** @description: release branch **>
        Release = 1
        
        <** @description: all other informal/development branches - not expected for software bundle firmware **>
        Other = 2
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_BootState
    {
        
        <** @description: Application is busy booting and initializing **>
        ApplicationInit = 0
        
        <** @description: CubeComputer control-program is running and performing port validation of connected nodes. Only applicable to CubeComputer **>
        PortValidation = 1
        
        <** @description: CubeComputer control-program is running and performing node auto discovery of connected nodes. Only applicable to CubeComputer **>
        AutoDiscover = 2
        
        <** @description: Application is running after successful bootloader execution and initialization **>
        ApplicationRunning = 3
        
        <** @description: Application has triggered an ASSERT and will immediately. This is transitory and is not expected to be read as the state. It will be reflected in the reset reason.  **>
        AssertError = 4
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFramework1_BootResetReason
    {
        
        <** @description: Reset reason is unknown **>
        ResetUnknown = 0
        
        <** @description: Firewall (Unused) **>
        ResetFirewall = 1
        
        <** @description: Option-byte reset. This will have a dedicated reset reason if commanded, otherwise, is signals that the bootloader reloaded option bytes automatically before exitting. **>
        ResetObl = 2
        
        <** @description: External Pin reset (Unused) **>
        ResetExtPin = 3
        
        <** @description: Brown Out reset **>
        ResetBrownOut = 4
        
        <** @description: Software reset **>
        ResetSoft = 5
        
        <** @description: WatchDog Reset **>
        ResetWatchdog = 6
        
        <** @description: Low Power Reset **>
        ResetLowPower = 7
        
        <** @description: The running application triggered an ASSERT and reset - check error log for error code **>
        ResetAssertErr = 8
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFrameworkEnums_TcTlmError
    {
        
        <** @description: No Error **>
        Ok = 0
        
        <** @description: Invalid TcTlm ID **>
        InvalidId = 1
        
        <** @description: Invalid Length **>
        InvalidLength = 2
        
        <** @description: Invalid Parameter **>
        InvalidParam = 3
        
        <** @description: CRC Check Failed **>
        Crc = 4
        
        <** @description: TCTLM not implemented **>
        NotImplemented = 5
        
        <** @description: Busy **>
        TcTlmBusy = 6
        
        <** @description: Error in sequence of commands **>
        Sequence = 7
        
        <** @description: Internal error **>
        Internal = 8
        
        <** @description: Passthrough node timeout error **>
        PassTimeout = 9
        
        <** @description: Passthrough target is invalid (passthrough is disabled) **>
        PassTarget = 10
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFrameworkEnums_NodeType
    {
        
        <** @description: Invalid Node Type **>
        NodeTypeInvalid = 0
        
        <** @description: CubeComputer Type - version independant **>
        NodeTypeCubeComputer = 1
        
        <** @description: CubeSense Type - version independant **>
        NodeTypeCubeSense = 2
        
        <** @description: CubeWheel Type - version independant **>
        NodeTypeCubeWheel = 3
        
        <** @description: CubeIR Type - version independant **>
        NodeTypeCubeIr = 4
        
        <** @description: CubeMag Deploy Type - version independant **>
        NodeTypeCubeMagDeploy = 5
        
        <** @description: CubeMag Compact Type - version independant **>
        NodeTypeCubeMagCompact = 6
        
        <** @description: CubeStar Type - version independant **>
        NodeTypeCubeStar = 7
        
        <** @description: CubeAuriga Type - version independant **>
        NodeTypeAuriga = 8
        
        <** @description: CubeNode General Type - version independant **>
        NodeTypeCubeNode = 9
        
        <** @description: CubeNode SLT Type - version independant **>
        NodeTypeCubeNodeSlt = 10
        
        <** @description: CubeNode PST3S Type - version independant **>
        NodeTypeCubeNodePst3s = 11
        
        <** @description: CubeNode NSSRWL Type - version independant **>
        NodeTypeCubeNodeNssrwl = 12
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFrameworkEnums_ProgramType
    {
        
        <** @description: Invalid Program Type **>
        ProgramTypeInvalid = 0
        
        <** @description: control-program primary product application **>
        ProgramTypeControl = 1
        
        <** @description: cube-computer flash-bootloader Bootloader application **>
        ProgramTypeBootloader = 4
        
        <** @description: health-check Health Check application **>
        ProgramTypeHealthCheck = 5
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFrameworkEnums_AbstractNode
    {
        
        <** @description: Invalid Abstract Node **>
        NodeInvalid = 0
        
        <** @description: CubeComputer **>
        NodeComputer = 1
        
        <** @description: Star tracker 0 **>
        NodeStr0 = 2
        
        <** @description: Star tracker 1 **>
        NodeStr1 = 3
        
        <** @description: Fine sun sensor 0 **>
        NodeFss0 = 4
        
        <** @description: Fine sun sensor 1 **>
        NodeFss1 = 5
        
        <** @description: Fine sun sensor 2 **>
        NodeFss2 = 6
        
        <** @description: Fine sun sensor 3 **>
        NodeFss3 = 7
        
        <** @description: Horizon sun sensor 0 **>
        NodeHss0 = 8
        
        <** @description: Horizon sun sensor 1 **>
        NodeHss1 = 9
        
        <** @description: Magnetometer sensor 0 **>
        NodeMag0 = 10
        
        <** @description: Magnetometer sensor 1 **>
        NodeMag1 = 11
        
        <** @description: External sensor 0 **>
        NodeExt0 = 12
        
        <** @description: External sensor 1 **>
        NodeExt1 = 13
        
        <** @description: Reaction wheel 0 **>
        NodeRwl0 = 14
        
        <** @description: Reaction wheel 1 **>
        NodeRwl1 = 15
        
        <** @description: Reaction wheel 2 **>
        NodeRwl2 = 16
        
        <** @description: Reaction wheel 3 **>
        NodeRwl3 = 17
        
        <** @description: Reaction wheel 4 **>
        NodeRwl4 = 18
        
    }
    
    <** @description: No enumeration description provided by CubeSpace
    **>
    enumeration CommonFrameworkEnums_SerialSource
    {
        
        <** @description: Serial number sourced from OTP **>
        SourceOtp = 0
        
        <** @description: Serial number sourced from Config **>
        SourceConfig = 1
        
    }
    
    
    
    
    <**
        @description: Perform a soft reset
        @details: id = 0
    **>
    method setReset
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
            <** @description: The type of reset to perform **>
            CommonFramework1_ResetVal ResetType
            
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
        }
    }
    
    <**
        @description: Current Unix time
        @details: id = 1
    **>
    method setUnixTime
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
            <** @description: Current Unix time s **>
            UInt32 UnixTimeSeconds
            
            <** @description: Current Unix time ns **>
            UInt32 UnixTimeNanoSeconds
            
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
        }
    }
    
    <**
        @description: Describes the index of the error log that will be read when calling GetErrorLogEntry
        @details: id = 2
    **>
    method setErrorLogIndex
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
            <** @description: 0 = Head, 1 = Tail **>
            CommonFramework1_ErrorLogSearch ErrorLogIndexReference
            
            <** @description: Error Log Index Value ~ Relative to ErrorLogIndexReference **>
            UInt16 ErrorLogIndexValue
            
            <** @description: Number of Error Log Entries Present **>
            UInt16 ErrorLogEntries
            
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
        }
    }
    
    <**
        @description: Error Log Entry
        @details: id = 3
    **>
    method setErrorLogEntry
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
            <** @description: Timestamp of this Error Log Entry **>
            UInt32 ErrorLogEntryTimestamp
            
            <** @description: ErrorCode of this Error Log Entry **>
            UInt32 ErrorLogEntryErrorCode
            
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
        }
    }
    
    <**
        @description: Clear the Error Log
        @details: id = 4
    **>
    method setErrorLogClear
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
        }
    }
    
    <**
        @description: Error Log Settings
        @details: id = 5
    **>
    method setErrorLogSettings
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
            <** @description: Error Logging Enabled state **>
            CommonFramework1_ActiveState ActiveState
            
            <** @description: Action to take when log is full **>
            CommonFramework1_BufferFullAction BufferFullAction
            
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
        }
    }
    
    <**
        @description: Writes volatile config items to flash
        @details: id = 6
    **>
    method setConfigPersist
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
        }
    }
    
    <**
        @description: Identification information for this node
        @details: id = 7
    **>
    method getIdentification
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Node type identifier **>
            CommonFrameworkEnums_NodeType NodeType
            
            <** @description: Program type identifier **>
            CommonFrameworkEnums_ProgramType ProgramType
            
            <** @description: Interface version **>
            UInt8 InterfaceVersion
            
            <** @description: Firmware version (Major) **>
            UInt8 FirmwareMajorVersion
            
            <** @description: Firmware version (Minor) **>
            UInt8 FirmwareMinorVersion
            
            <** @description: Seconds since processor start-up **>
            UInt16 RuntimeSeconds
            
            <** @description: Milliseconds (after the integer second) since processor start-up **>
            UInt16 RuntimeMilliseconds
            
            
        }
    }
    
    <**
        @description: Unique serial number of the CubeSpace Component
        @details: id = 8
    **>
    method getSerialNumber
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: OTP ASCII string of chars denoting the serial number of this module  
            @details: size = 32 **>
            UInt8[] OtpSerial
            
            <** @description: Config ASCII string of chars denoting the serial number of this module  
            @details: size = 32 **>
            UInt8[] CfgSerial
            
            <** @description: Node type identifier sourced from active serial **>
            CommonFrameworkEnums_NodeType NodeType
            
            <** @description: Integer representation of the integer portion the serial number of this module sourced from active serial **>
            UInt32 SerialInt
            
            <** @description: Which area the serial number (OTP/Config) is being used internally **>
            CommonFrameworkEnums_SerialSource ActiveSerial
            
            
        }
    }
    
    <**
        @description: Describes the index of the error log that will be read when calling GetErrorLogEntry
        @details: id = 9
    **>
    method getErrorLogIndex
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: 0 = Head, 1 = Tail **>
            CommonFramework1_ErrorLogSearch ErrorLogIndexReference
            
            <** @description: Error Log Index Value ~ Relative to ErrorLogIndexReference **>
            UInt16 ErrorLogIndexValue
            
            <** @description: Number of Error Log Entries Present **>
            UInt16 ErrorLogEntries
            
            
        }
    }
    
    <**
        @description: Error Log Entry
        @details: id = 10
    **>
    method getErrorLogEntry
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Timestamp of this Error Log Entry **>
            UInt32 ErrorLogEntryTimestamp
            
            <** @description: ErrorCode of this Error Log Entry **>
            UInt32 ErrorLogEntryErrorCode
            
            
        }
    }
    
    <**
        @description: Error Log Settings
        @details: id = 11
    **>
    method getErrorLogSettings
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Error Logging Enabled state **>
            CommonFramework1_ActiveState ActiveState
            
            <** @description: Action to take when log is full **>
            CommonFramework1_BufferFullAction BufferFullAction
            
            
        }
    }
    
    <**
        @description: Current Unix time
        @details: id = 12
    **>
    method getUnixTime
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Current Unix time s **>
            UInt32 UnixTimeSeconds
            
            <** @description: Current Unix time ns **>
            UInt32 UnixTimeNanoSeconds
            
            
        }
    }
    
    <**
        @description: Diagnostics data for config persistence
        @details: id = 13
    **>
    method getConfigPersistDiagnostics
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Config Persistence Task State **>
            CommonFramework1_ConfigPersistState State
            
            <** @description: Config Persistence Last Result **>
            CommonFramework1_ConfigPersistResult LastResult
            
            <** @description: Timestamp of last result **>
            UInt32 Timestamp
            
            
        }
    }
    
    <**
        @description: Communication Status
        @details: id = 14
    **>
    method getCommsStatus
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: UART No. of telecommands received **>
            UInt16 uartTcCounter
            
            <** @description: UART No. of telemetry requests received **>
            UInt16 uartTlmCounter
            
            <** @description: UART Errors reported in SW checks **>
            UInt16 uartSoftwareProtoErrors
            
            <** @description: UART Errors reported by HW Flags **>
            UInt16 uartHardwareFlagErrors
            
            <** @description: UART2 No. of telecommands received **>
            UInt16 uart2TcCounter
            
            <** @description: UART2 No. of telemetry requests received **>
            UInt16 uart2TlmCounter
            
            <** @description: UART2 Errors reported in SW checks **>
            UInt16 uart2SoftwareProtoErrors
            
            <** @description: UART2 Errors reported by HW Flags **>
            UInt16 uart2HardwareFlagErrors
            
            <** @description: CAN No. of telecommands received **>
            UInt16 canTcCounter
            
            <** @description: CAN No. of telemetry requests received **>
            UInt16 canTlmCounter
            
            <** @description: CAN Errors reported in SW checks **>
            UInt16 canSoftwareProtoErrors
            
            <** @description: CAN Errors reported by HW Flags **>
            UInt16 canHardwareFlagErrors
            
            <** @description: I2C No. of telecommands received **>
            UInt16 i2cTcCounter
            
            <** @description: I2C No. of telemetry requests received **>
            UInt16 i2cTlmCounter
            
            <** @description: I2C Errors reported in SW checks **>
            UInt16 i2cSoftwareProtoErrors
            
            <** @description: I2C Errors reported by HW Flags **>
            UInt16 i2cHardwareFlagErrors
            
            
        }
    }
    
    <**
        @description: Firmware Version
        @details: id = 15
    **>
    method getVersion
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Firmware version (Major) **>
            UInt8 FirmwareMajorVersion
            
            <** @description: Firmware version (Minor) **>
            UInt8 FirmwareMinorVersion
            
            <** @description: Firmware version (Patch) **>
            UInt16 FirmwarePatchVersion
            
            <** @description: System version (Major) **>
            UInt8 SystemMajorVersion
            
            <** @description: System version (Minor) **>
            UInt8 SystemMinorVersion
            
            <** @description: System version (Patch) **>
            UInt16 SystemPatchVersion
            
            <** @description: The git branch of the firmware build **>
            CommonFramework1_GitBranch GitBranch
            
            <** @description: Git has for the firmware build **>
            UInt32 GitHash
            
            <** @description: Build hash **>
            UInt32 BuildHash
            
            <** @description: Timestamp of the firmware build **>
            UInt32 BuildTimeSeconds
            
            <** @description: Hardware version (Minor) **>
            UInt8 HardwareMinorVersion
            
            
        }
    }
    
    <**
        @description: State information about the device boot process
        @details: id = 16
    **>
    method getBootStatus
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Boot State **>
            CommonFramework1_BootState State
            
            <** @description: Cause of the last reset **>
            CommonFramework1_BootResetReason ResetReason
            
            <** @description: CRC check of shared parameters from bootloader failed - app will use its own config values **>
            Boolean SharedParamsError
            
            <** @description: Port validation failed. Only applicable to CubeComputer. **>
            Boolean PortValidationError
            
            <** @description: Auto-Discovery failed. Only applicable to CubeComputer. **>
            Boolean PortDiscoveryError
            
            <** @description: OTP serial number is invalid **>
            Boolean OtpSerialError
            
            <** @description: Config serial number is invalid **>
            Boolean CfgSerialError
            
            <** @description: OTP/Config serial numbers do not match **>
            Boolean SerialMismatchError
            
            <** @description: Set if the applications config is invalid and the default configuration is being used (if available). **>
            Boolean ConfigInvalidError
            
            
        }
    }
    
    <**
        @description: Used with the I2C protocol to receive Telecommand Ack/Nack
        @details: id = 17
    **>
    method getTelecommandAcknowledge
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Last TcTlm ID **>
            UInt8 Id
            
            <** @description: Last TcTlm Error **>
            CommonFrameworkEnums_TcTlmError Error
            
            <** @description: Buffer index of error **>
            UInt8 ErrorIndex
            
            <** @description: Flag indicating if this acknowledgement has been read sinc the last TCTLM **>
            Boolean Read
            
            
        }
    }
    
    <**
        @description: Error codes common to all applications
        @details: id = 18
    **>
    method getCommonErrorCodes
    {
        in
        {
			<** @description: CubeADCS Gen2 node to receive the request.
			@details: size = 1 **>
			CmdTargetNode cmdTargetNode
			
        }
        
        

        out
        {
            <** @description: Return status of the CubeADCS Gen2 API operation. **>
            UInt32 adcsErrorCode
            
            <** @description: Tctlm comms slave service error code for CAN interface (OBC comms). **>
            UInt32 SlaveSvcCan
            
            <** @description: Tctlm comms slave service error code for UART interface (OBC comms). **>
            UInt32 SlaveSvcUart
            
            <** @description: Tctlm comms slave service error code for I2C interface (OBC comms). **>
            UInt32 SlaveSvcI2c
            
            <** @description: Error-log service error code. **>
            UInt32 ErrorLogSvc
            
            
        }
    }
    
}