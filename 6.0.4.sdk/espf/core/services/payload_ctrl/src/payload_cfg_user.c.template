/** \file payload_cfg.c
 * 
 * @brief Payload-specific configuration module used by the Payload Controller to manager the
 *           individual payloads.
 *
 * @copyright (C) EnduroSat
 *            Contents and presentations are protected world-wide.
 *            Any kind of using, copying etc. is prohibited without prior permission.
 *            All rights - incl. industrial property rights - are reserved.
 */

#include "es_cdef.h"
#include "payload_ctrl.h"
#include "payload_cfg.h"
#include "payload_cfg_user.h"
#include "payload_dummy.h"

static void payload_dummy_event_notify(const pl_instance_id_t instance_id, pl_state_t to_state);

// TODO: Include individual payload instances to map them below!
const payload_immutable_cfg_t payload_cfg[PAYLOAD_COUNT] =
{
    // PAYLOAD_RPi_IBM
    { .p_pl_interface = &payload_dummy_if,
      .internal_inst_id = 0U,
      .init_config =
      {
          .p_config_data = NULL,
          .size = 0U
      },
      .p_pl_notif_cbk = &payload_dummy_event_notify
    },
    // TODO: testing only
#if 0
    // PAYLOAD_RPi_WHITEHAT
    { .p_pl_interface = NULL,
      .internal_inst_id = 1U,
      .init_config =
      {
          .p_config_data = NULL,
          .size = 0U
      },
      .p_pl_notif_cbk = NULL
    },

    // PAYLOAD_XBand
    { .p_pl_interface = NULL,
      .internal_inst_id = 0U,
      .init_config =
      {
          .p_config_data = NULL,
          .size = 0U
      },
      .p_pl_notif_cbk = NULL
    },
#endif
};

static void payload_dummy_event_notify(const pl_instance_id_t instance_id, pl_state_t to_state)
{
    payload_ctrl_event_notify(payload_cfg[PAYLOAD_RPi_IBM].internal_inst_id, to_state);
}
