package endurosat.macif

<** @description: This is specific interface modified based on system configuraiton.
    @details: id = 30
**>
interface nvm_bp
{
    version { major 0 minor 1 }

    <** @description: General status type used for SW-related communication and/or settings. **>
    enumeration StandardResult
    {
        <** @description: The operation is successful **>
        SUCCESS,
        <** @description: An error has occurred **>
        ERROR,
        <** @description: Invalid input arguments provided to the operation **>
        INVALID_ARGS,
        <** @description: The action related to the input data is not supported by the firmware **>
        NOT_SUPPORTED
    }

// begin EPS BP generated code
<** @description: EPS Battery Pack IDs. Here is an extensive list of all possible IDs of the BPs in a system. 
    Depending on count of the EPS BPs in the specific configuration only the first N of those will be used. **>
    enumeration EpsBpIdType
    {
    
        <** @description:  EPS Battery Pack ID  **>
        EPS_BP_0,    
        <** @description:  EPS Battery Pack ID  **>
        EPS_BP_1,    
        <** @description:  EPS Battery Pack ID  **>
        EPS_BP_2        
    }
// end EPS BP generated code
    
    <** @description: Update the MAC address in the eps bp mac address book of the OBC NVM.
        @details: id = 0x00000001
    **>
    method set_eps_bp_mac_address
    {
        in
        {
            <** @description: New MAC address. **>
            UInt8 new_mac_address
            <** @description: Device. See the list of device IDs in the NVM fidl. **>
            EpsBpIdType device_id
        }
        out
        {
            <** @description: Set request result **>
            StandardResult op_result
        }
    }
    
    <** @description: Read the MAC addres in the mac address book of the OBC NVM.
        @details: id = 0x00000002
    **>
    method get_eps_bp_mac_address
    {
        in
        {
            <** @description: Device. See the list of device IDs in the NVM fidl. **>
            EpsBpIdType device_id
        }
        out
        {
            <** @description: MAC address read from NVM. **>
            UInt8 mac_address
            <** @description: Get request result **>
            StandardResult op_result
        }
    }    
}