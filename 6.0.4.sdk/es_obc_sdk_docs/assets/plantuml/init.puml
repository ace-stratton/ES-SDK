@startuml

participant MCU
participant Startup as "startup_stm32f7xx.s"
participant SYS as "system_stm32f7xx.c"
participant main as "main.c"
participant MCU_Init as "MCU_Init.c"
participant EXEH as "es_exeh.c"
participant EEPEmul as "EEPROM_emul.c"
participant HAL as "stm32f7xx_hal.c"
participant OpModes as "OpModes.c"
participant ESTTC as "ESTTC.c"
participant UHFKA as "UhfKeepAlive.c"
participant Telem as "Telemetry.c"
participant BCN as "Beacons.c"
participant PWR as "PwrMng.c"
participant FRAM as "ExtFram.c"
participant SD as "SdMngr.c"
participant RTOS as "cmsis_os2.c"
participant APP as "AppTasks.c"
participant ESPS as "ESSA_Stack_Facade.c"
participant DefTasks as "DefTasks.c"
participant AntUHF as "AntUHF.c"
participant UHF as "UHF.c"
participant EPS as "EPS_I.c"

MCU -> Startup: Power-on or MCU reset
Startup -> Startup: system initialization and\nISR table setup
Startup -> SYS: SystemInit()
Startup -> main: main()
main -> MCU_Init: PVD_BrownoutReset_Init()
note left of MCU_Init: setup brownout detector voltage levels for CPU core
main -> EXEH: EXEH_bInit()
note left of EXEH: initialize the basic exception handler
main -> EEPEmul: EEPROM_Emul_Init()
note left of EEPEmul: initialize the Flash EEPROM emulation
alt "Application Mode"
main -> main: Set ISR table address to application area
else "Boot Mode"
main -> main: Set ISR table address to bootloader area
end opt

opt "Watchdog enabled in build configuration"
main -> MCU_Init: MX_IWDG_Init()
note left MCU_Init: enable Independent watchdog
end opt

main -> HAL: HAL_Init()
note left HAL: common ST low-level HAL initialization

main -> MCU_Init: SystemClock_IdleConfig()
note left MCU_Init: initialization of system clocks and peripheral clocks

main -> MCU_Init: MX_GPIO_Init()
note left of MCU_Init: apply initial GPIO port configuration settings

opt OPMODES_ENABLED == 0
    main -> ESTTC: ESTTC_Init()
else
    main -> OpModes: OpModes_Init()
    note left of OpModes: ConOps state machine initialization

    opt UHF_KEEP_ALIVE_ENABLE
    main -> UHFKA: UhfKeepAlive_Init()
    end opt

    opt OPMODES_TELEMETRY_ENABLED == 1
    main -> Telem: Telemetry_Init()
    end opt

    opt OPMODES_BEACONS_ENABLED == 1
    main -> BCN: BCN_Init()
    note left of BCN: Radio beacon triggers initialization
    end opt

    opt POWER_MANAGER_ENABLED == 1
    main -> PWR: PwrMng_Init()
    note left of PWR: Sleep/Wakeup management initialization
    end opt
end opt

main -> MCU_Init: MX_ADC1_Init()
main -> MCU_Init: MX_RTC_Init()
main -> MCU_Init: MX_I2C_Init()
main -> FRAM: ExtFram_Init()

main -> SD: SdMngr_InitTask()

main -> RTOS: osKernelInitialize()

main -> APP: AppTask_Init()

main -> ESTTC: ESTTC_InitTask()
note left of ESTTC: ESTTC protocol task initialization

opt RS485_MAC_LAYER_ENABLED
main -> ESPS: ESSA_Stack_Facade_Init()
note left of ESPS: ESPS I protocol stack initialization
end opt

main -> DefTasks: ServicesTask_Init()
main -> AntUHF: AntUHF_Init()

opt ENABLE_EPS_I_SUPPORT
main -> EPS: EPS_I_Init()
end opt

opt ENABLE_UHF_II_SUPPORT
main -> UHF: UHF_Init()
end opt

main -> RTOS: osKernelStart()

loop forever
main -> main: 
end loop

@enduml