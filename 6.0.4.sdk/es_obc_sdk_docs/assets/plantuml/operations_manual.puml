@startuml
title Operations - key players and interactions

package "Ground Segment" {
:Operator: as op
}

package "Satellite" {

[Onboard (Payload)\nScheduler] as PS
[conops]
[payload_ctrl] as PC

[aocs_cntrl] as AC
() "<b>if_aocs_cntrl.h" as if_aocs

    package "Gen2 Service" {
    [Gen2 Components] as gen_2
    [Gen2 Command Protocol] as gen_2_cp
    [Gen2 Driver] as gen_2_drv
    }
}

op ..up..> PS #green;text:green : **5.** Update/Upload\non-board schedule\nusing file upload procedure
PS ..left..> conops #maroon;text:maroon : **6.** Trigger **payload_ctrl** \nwith AOCS state and params from schedule file

op ..left..-> gen_2_cp #red;text:red : **1.** Commanding the **Gen2**\nmodule using CubeSpace APIs (15 FIDLs)
op ..left..-> gen_2 #blue;text:blue : **2.** Commanding the Gen2\nservice using service FIDL
gen_2 --> gen_2_cp
gen_2 <-down-> gen_2_drv
gen_2_cp <-down-> gen_2_drv
gen_2 <-up-> if_aocs

op ..left..> AC #indigo;text:indigo : **3.** Commanding via **aocs_cntrl** FIDL

op ..> conops #magenta;text:magenta : **4.** Commanding the **ConOps**\nusing the ConOps FIDL

conops ..> AC #peru;text:peru : **7.** Request AOCS state,\ncommissioning status, etc.

conops .> PC #tomato;text:tomato : **8.** Request payload logic,\n AOCS state and params
PC .> conops #teal;text:teal : **9.** Receive notifications\nfrom payload logic

PC <..> AC #gray;text:gray : **10.** Trigger and monitor\nAOCS pointing
AC <-right-> if_aocs

legend
   |= Line Style |= Description|
   | <color:black><size:18><&arrow-right></size></color> | Component interaction |
   | <color:red><size:18><U+21E2></size></color>, <color:blue><size:18><U+21E2></size></color>, <color:green><size:18><U+21E2></size></color>, ... | Operations interaction |
endlegend

@enduml