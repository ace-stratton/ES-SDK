@startuml

participant GS as "Ground Station"
participant espsi as "OBC::ESPS I stack"
participant FWUPDH as "FWUPD_Handler_Cfg.c"
participant CommApi as "CommandsApi.c"
participant TaskMon as "TaskMonitor.c"
participant OBCMain as "main.c"
participant RTOS
participant DefTasks as "DefTasks.c"
participant BootLdr as "BootLdr.c"

note over GS, espsi #orange: File transfer session in progress

opt File transfer session finished successfully
    note left of FWUPDH: this is a notification for a complete update package transfer
    espsi -> FWUPDH: FWUPD_Handler_Cfg_HandleTransferComplete(...)
    activate FWUPDH
    note left of CommApi: reconfigure boot flags and trigger a subsequent reset in Bootloader mode
    FWUPDH -> CommApi: WriteHandler_ResetInBootOrAppMode(APPMODE_AUTO_FW_UPDATE)
    activate CommApi
    CommApi -> TaskMon: TaskMonitor_TriggerDelayedReset(...)

    deactivate FWUPDH
    deactivate CommApi

    === OBC starts in Bootloader mode ===
    OBCMain -> BootLdr: BootLdr_BootingProcess()
        RTOS -> DefTasks: ServicesTask()
        activate DefTasks
        DefTasks -> BootLdr: BootLdr_CheckAutoFlashCmd()
        activate BootLdr
        BootLdr -> BootLdr: BootLdr_AutoFlashFromBin()
        note over BootLdr: perform FLASH erase and flashing of new application blocks
        opt file CRC matches CRC of flashed database
            BootLdr -> BootLdr: BootLdr_ImmediatAppJump()
            BootLdr -> TaskMon: TaskMonitor_ImmediatReset(TASK_MONITOR_SW_RESET)
    === OBC boots the new Application ===
        else flashing error occurred
    === OBC remains in Bootloader mode ===
        end opt
    deactivate BootLdr
    deactivate DefTasks

end opt

@enduml