@startuml
title Attitude and Orbit Control General Sequence


actor aocs_client as AC
participant OS
participant aocs_cntrl as AOCS
participant datacache
participant aocs_if
participant adcs


AC -> AOCS: <b>aocs_cntrl_request_aocs_state(state_id, params)    

note right
    All messages in this diagram correspond to synchronous calls.
    Return messages are omitted for clarity purposes.
end note

AOCS -> datacache: <b>dc_set_aocs_cntrl_sys_state_data(state_data)

OS -> AOCS: <b>fs_aocs_cntrl_task(...)
AOCS -> datacache: <b>dc_get_aocs_cntrl_sys_state_data(state_data)
alt state_data contains new request
AOCS -> aocs_if: <b>p_sys_state_chng_req(state, params)
aocs_if -> AOCS: call to ADCS integration logic
note left
    Translations to specific
    ADCS APIs are part of the
    aocs_cntrl configuration.
end note
AOCS -> adcs: call to specific ADCS APIs
else else
AOCS -> aocs_if: <b>p_sys_state_get_req_state(state, request_status)
aocs_if -> AOCS: call to ADCS integration logic
AOCS -> adcs: call to specific ADCS APIs
alt request_status == COMPLETED
AOCS -> datacache: <b>dc_set_aocs_cntrl_sys_state_data(state_data(state, COMPLETED))
else request_status == IN_PROGRESS
AOCS -> datacache: <b>dc_set_aocs_cntrl_sys_state_data(state_data(state, IN_PROGRESS))
end
end

@enduml